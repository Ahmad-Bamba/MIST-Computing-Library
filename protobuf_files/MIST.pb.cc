// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MIST.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MIST.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ProtobufMIST {
class ComputerInformationDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ComputerInformation> {};
ComputerInformationDefaultTypeInternal _ComputerInformation_default_instance_;
class Variable_nameDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Variable_name> {};
Variable_nameDefaultTypeInternal _Variable_name_default_instance_;
class Shared_int64DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Shared_int64> {};
Shared_int64DefaultTypeInternal _Shared_int64_default_instance_;
class Shared_uint64DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Shared_uint64> {};
Shared_uint64DefaultTypeInternal _Shared_uint64_default_instance_;
class Shared_int32DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Shared_int32> {};
Shared_int32DefaultTypeInternal _Shared_int32_default_instance_;
class Shared_uint32DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Shared_uint32> {};
Shared_uint32DefaultTypeInternal _Shared_uint32_default_instance_;
class Shared_bytesDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Shared_bytes> {};
Shared_bytesDefaultTypeInternal _Shared_bytes_default_instance_;
class Shared_boolDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Shared_bool> {};
Shared_boolDefaultTypeInternal _Shared_bool_default_instance_;
class Shared_floatDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Shared_float> {};
Shared_floatDefaultTypeInternal _Shared_float_default_instance_;
class Shared_doubleDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Shared_double> {};
Shared_doubleDefaultTypeInternal _Shared_double_default_instance_;
class Shared_stringDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Shared_string> {};
Shared_stringDefaultTypeInternal _Shared_string_default_instance_;
class NetworkDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Network> {};
NetworkDefaultTypeInternal _Network_default_instance_;
class TaskDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Task> {};
TaskDefaultTypeInternal _Task_default_instance_;

namespace {

::google::protobuf::Metadata file_level_metadata[13];

}  // namespace


const ::google::protobuf::uint32* protobuf_Offsets_MIST_2eproto() GOOGLE_ATTRIBUTE_COLD;
const ::google::protobuf::uint32* protobuf_Offsets_MIST_2eproto() {
  static const ::google::protobuf::uint32 offsets[] = {
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComputerInformation, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComputerInformation, allowedthreads_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComputerInformation, allowedmemory_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComputerInformation, enableht_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComputerInformation, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComputerInformation, address_),
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Variable_name, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Variable_name, name_),
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shared_int64, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shared_int64, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shared_int64, value_),
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shared_uint64, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shared_uint64, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shared_uint64, value_),
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shared_int32, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shared_int32, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shared_int32, value_),
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shared_uint32, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shared_uint32, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shared_uint32, value_),
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shared_bytes, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shared_bytes, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shared_bytes, value_),
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shared_bool, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shared_bool, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shared_bool, value_),
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shared_float, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shared_float, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shared_float, value_),
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shared_double, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shared_double, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shared_double, value_),
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shared_string, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shared_string, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shared_string, value_),
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Network, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Network, computers_),
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Task, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Task, task_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Task, task_id_),
  };
  return offsets;
}

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(ComputerInformation)},
  { 9, -1, sizeof(Variable_name)},
  { 14, -1, sizeof(Shared_int64)},
  { 20, -1, sizeof(Shared_uint64)},
  { 26, -1, sizeof(Shared_int32)},
  { 32, -1, sizeof(Shared_uint32)},
  { 38, -1, sizeof(Shared_bytes)},
  { 44, -1, sizeof(Shared_bool)},
  { 50, -1, sizeof(Shared_float)},
  { 56, -1, sizeof(Shared_double)},
  { 62, -1, sizeof(Shared_string)},
  { 68, -1, sizeof(Network)},
  { 73, -1, sizeof(Task)},
};

static const ::google::protobuf::internal::DefaultInstanceData file_default_instances[] = {
  {reinterpret_cast<const ::google::protobuf::Message*>(&_ComputerInformation_default_instance_), NULL},
  {reinterpret_cast<const ::google::protobuf::Message*>(&_Variable_name_default_instance_), NULL},
  {reinterpret_cast<const ::google::protobuf::Message*>(&_Shared_int64_default_instance_), NULL},
  {reinterpret_cast<const ::google::protobuf::Message*>(&_Shared_uint64_default_instance_), NULL},
  {reinterpret_cast<const ::google::protobuf::Message*>(&_Shared_int32_default_instance_), NULL},
  {reinterpret_cast<const ::google::protobuf::Message*>(&_Shared_uint32_default_instance_), NULL},
  {reinterpret_cast<const ::google::protobuf::Message*>(&_Shared_bytes_default_instance_), NULL},
  {reinterpret_cast<const ::google::protobuf::Message*>(&_Shared_bool_default_instance_), NULL},
  {reinterpret_cast<const ::google::protobuf::Message*>(&_Shared_float_default_instance_), NULL},
  {reinterpret_cast<const ::google::protobuf::Message*>(&_Shared_double_default_instance_), NULL},
  {reinterpret_cast<const ::google::protobuf::Message*>(&_Shared_string_default_instance_), NULL},
  {reinterpret_cast<const ::google::protobuf::Message*>(&_Network_default_instance_), NULL},
  {reinterpret_cast<const ::google::protobuf::Message*>(&_Task_default_instance_), NULL},
};

namespace {

void protobuf_AssignDescriptors() {
  protobuf_AddDesc_MIST_2eproto();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "MIST.proto", schemas, file_default_instances, protobuf_Offsets_MIST_2eproto(), factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 13);
}

}  // namespace

void protobuf_ShutdownFile_MIST_2eproto() {
  _ComputerInformation_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _Variable_name_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _Shared_int64_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _Shared_uint64_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _Shared_int32_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _Shared_uint32_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _Shared_bytes_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _Shared_bool_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _Shared_float_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _Shared_double_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _Shared_string_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _Network_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _Task_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
}

void protobuf_InitDefaults_MIST_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _ComputerInformation_default_instance_.DefaultConstruct();
  _Variable_name_default_instance_.DefaultConstruct();
  _Shared_int64_default_instance_.DefaultConstruct();
  _Shared_uint64_default_instance_.DefaultConstruct();
  _Shared_int32_default_instance_.DefaultConstruct();
  _Shared_uint32_default_instance_.DefaultConstruct();
  _Shared_bytes_default_instance_.DefaultConstruct();
  _Shared_bool_default_instance_.DefaultConstruct();
  _Shared_float_default_instance_.DefaultConstruct();
  _Shared_double_default_instance_.DefaultConstruct();
  _Shared_string_default_instance_.DefaultConstruct();
  _Network_default_instance_.DefaultConstruct();
  _Task_default_instance_.DefaultConstruct();
  _Shared_int64_default_instance_.get_mutable()->name_ = const_cast< ::ProtobufMIST::Variable_name*>(
      ::ProtobufMIST::Variable_name::internal_default_instance());
  _Shared_uint64_default_instance_.get_mutable()->name_ = const_cast< ::ProtobufMIST::Variable_name*>(
      ::ProtobufMIST::Variable_name::internal_default_instance());
  _Shared_int32_default_instance_.get_mutable()->name_ = const_cast< ::ProtobufMIST::Variable_name*>(
      ::ProtobufMIST::Variable_name::internal_default_instance());
  _Shared_uint32_default_instance_.get_mutable()->name_ = const_cast< ::ProtobufMIST::Variable_name*>(
      ::ProtobufMIST::Variable_name::internal_default_instance());
  _Shared_bytes_default_instance_.get_mutable()->name_ = const_cast< ::ProtobufMIST::Variable_name*>(
      ::ProtobufMIST::Variable_name::internal_default_instance());
  _Shared_bool_default_instance_.get_mutable()->name_ = const_cast< ::ProtobufMIST::Variable_name*>(
      ::ProtobufMIST::Variable_name::internal_default_instance());
  _Shared_float_default_instance_.get_mutable()->name_ = const_cast< ::ProtobufMIST::Variable_name*>(
      ::ProtobufMIST::Variable_name::internal_default_instance());
  _Shared_double_default_instance_.get_mutable()->name_ = const_cast< ::ProtobufMIST::Variable_name*>(
      ::ProtobufMIST::Variable_name::internal_default_instance());
  _Shared_string_default_instance_.get_mutable()->name_ = const_cast< ::ProtobufMIST::Variable_name*>(
      ::ProtobufMIST::Variable_name::internal_default_instance());
}

void protobuf_InitDefaults_MIST_2eproto() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_InitDefaults_MIST_2eproto_impl);
}
void protobuf_AddDesc_MIST_2eproto_impl() {
  protobuf_InitDefaults_MIST_2eproto();
  static const char descriptor[] = {
      "\n\nMIST.proto\022\014ProtobufMIST\"u\n\023ComputerIn"
      "formation\022\026\n\016allowedThreads\030\001 \001(\r\022\025\n\rall"
      "owedMemory\030\002 \001(\004\022\020\n\010enableHT\030\003 \001(\010\022\014\n\004na"
      "me\030\004 \001(\t\022\017\n\007address\030\005 \001(\t\"\035\n\rVariable_na"
      "me\022\014\n\004name\030\001 \001(\t\"H\n\014Shared_int64\022)\n\004name"
      "\030\001 \001(\0132\033.ProtobufMIST.Variable_name\022\r\n\005v"
      "alue\030\002 \001(\003\"I\n\rShared_uint64\022)\n\004name\030\001 \001("
      "\0132\033.ProtobufMIST.Variable_name\022\r\n\005value\030"
      "\002 \001(\004\"H\n\014Shared_int32\022)\n\004name\030\001 \001(\0132\033.Pr"
      "otobufMIST.Variable_name\022\r\n\005value\030\002 \001(\003\""
      "I\n\rShared_uint32\022)\n\004name\030\001 \001(\0132\033.Protobu"
      "fMIST.Variable_name\022\r\n\005value\030\002 \001(\004\"H\n\014Sh"
      "ared_bytes\022)\n\004name\030\001 \001(\0132\033.ProtobufMIST."
      "Variable_name\022\r\n\005value\030\002 \001(\014\"G\n\013Shared_b"
      "ool\022)\n\004name\030\001 \001(\0132\033.ProtobufMIST.Variabl"
      "e_name\022\r\n\005value\030\002 \001(\010\"H\n\014Shared_float\022)\n"
      "\004name\030\001 \001(\0132\033.ProtobufMIST.Variable_name"
      "\022\r\n\005value\030\002 \001(\002\"I\n\rShared_double\022)\n\004name"
      "\030\001 \001(\0132\033.ProtobufMIST.Variable_name\022\r\n\005v"
      "alue\030\002 \001(\001\"I\n\rShared_string\022)\n\004name\030\001 \001("
      "\0132\033.ProtobufMIST.Variable_name\022\r\n\005value\030"
      "\002 \001(\t\"\?\n\007Network\0224\n\tcomputers\030\001 \003(\0132!.Pr"
      "otobufMIST.ComputerInformation\"*\n\004Task\022\021"
      "\n\ttask_name\030\001 \001(\t\022\017\n\007task_id\030\002 \001(\tB\002H\001b\006"
      "proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 966);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MIST.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MIST_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_MIST_2eproto_once_);
void protobuf_AddDesc_MIST_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_MIST_2eproto_once_,
                 &protobuf_AddDesc_MIST_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MIST_2eproto {
  StaticDescriptorInitializer_MIST_2eproto() {
    protobuf_AddDesc_MIST_2eproto();
  }
} static_descriptor_initializer_MIST_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ComputerInformation::kAllowedThreadsFieldNumber;
const int ComputerInformation::kAllowedMemoryFieldNumber;
const int ComputerInformation::kEnableHTFieldNumber;
const int ComputerInformation::kNameFieldNumber;
const int ComputerInformation::kAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ComputerInformation::ComputerInformation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_MIST_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufMIST.ComputerInformation)
}
ComputerInformation::ComputerInformation(const ComputerInformation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.address().size() > 0) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  ::memcpy(&allowedmemory_, &from.allowedmemory_,
    reinterpret_cast<char*>(&enableht_) -
    reinterpret_cast<char*>(&allowedmemory_) + sizeof(enableht_));
  // @@protoc_insertion_point(copy_constructor:ProtobufMIST.ComputerInformation)
}

void ComputerInformation::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&allowedmemory_, 0, reinterpret_cast<char*>(&enableht_) -
    reinterpret_cast<char*>(&allowedmemory_) + sizeof(enableht_));
  _cached_size_ = 0;
}

ComputerInformation::~ComputerInformation() {
  // @@protoc_insertion_point(destructor:ProtobufMIST.ComputerInformation)
  SharedDtor();
}

void ComputerInformation::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ComputerInformation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ComputerInformation::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[0].descriptor;
}

const ComputerInformation& ComputerInformation::default_instance() {
  protobuf_InitDefaults_MIST_2eproto();
  return *internal_default_instance();
}

ComputerInformation* ComputerInformation::New(::google::protobuf::Arena* arena) const {
  ComputerInformation* n = new ComputerInformation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ComputerInformation::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufMIST.ComputerInformation)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&allowedmemory_, 0, reinterpret_cast<char*>(&enableht_) -
    reinterpret_cast<char*>(&allowedmemory_) + sizeof(enableht_));
}

bool ComputerInformation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufMIST.ComputerInformation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 allowedThreads = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &allowedthreads_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 allowedMemory = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &allowedmemory_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool enableHT = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enableht_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtobufMIST.ComputerInformation.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string address = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), this->address().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtobufMIST.ComputerInformation.address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufMIST.ComputerInformation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufMIST.ComputerInformation)
  return false;
#undef DO_
}

void ComputerInformation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufMIST.ComputerInformation)
  // uint32 allowedThreads = 1;
  if (this->allowedthreads() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->allowedthreads(), output);
  }

  // uint64 allowedMemory = 2;
  if (this->allowedmemory() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->allowedmemory(), output);
  }

  // bool enableHT = 3;
  if (this->enableht() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->enableht(), output);
  }

  // string name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufMIST.ComputerInformation.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->name(), output);
  }

  // string address = 5;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufMIST.ComputerInformation.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->address(), output);
  }

  // @@protoc_insertion_point(serialize_end:ProtobufMIST.ComputerInformation)
}

::google::protobuf::uint8* ComputerInformation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufMIST.ComputerInformation)
  // uint32 allowedThreads = 1;
  if (this->allowedthreads() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->allowedthreads(), target);
  }

  // uint64 allowedMemory = 2;
  if (this->allowedmemory() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->allowedmemory(), target);
  }

  // bool enableHT = 3;
  if (this->enableht() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->enableht(), target);
  }

  // string name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufMIST.ComputerInformation.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  // string address = 5;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufMIST.ComputerInformation.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->address(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ProtobufMIST.ComputerInformation)
  return target;
}

size_t ComputerInformation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufMIST.ComputerInformation)
  size_t total_size = 0;

  // string name = 4;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string address = 5;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  // uint64 allowedMemory = 2;
  if (this->allowedmemory() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->allowedmemory());
  }

  // uint32 allowedThreads = 1;
  if (this->allowedthreads() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->allowedthreads());
  }

  // bool enableHT = 3;
  if (this->enableht() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ComputerInformation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufMIST.ComputerInformation)
  GOOGLE_DCHECK_NE(&from, this);
  const ComputerInformation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ComputerInformation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufMIST.ComputerInformation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufMIST.ComputerInformation)
    MergeFrom(*source);
  }
}

void ComputerInformation::MergeFrom(const ComputerInformation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufMIST.ComputerInformation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.allowedmemory() != 0) {
    set_allowedmemory(from.allowedmemory());
  }
  if (from.allowedthreads() != 0) {
    set_allowedthreads(from.allowedthreads());
  }
  if (from.enableht() != 0) {
    set_enableht(from.enableht());
  }
}

void ComputerInformation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufMIST.ComputerInformation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ComputerInformation::CopyFrom(const ComputerInformation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufMIST.ComputerInformation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComputerInformation::IsInitialized() const {
  return true;
}

void ComputerInformation::Swap(ComputerInformation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ComputerInformation::InternalSwap(ComputerInformation* other) {
  name_.Swap(&other->name_);
  address_.Swap(&other->address_);
  std::swap(allowedmemory_, other->allowedmemory_);
  std::swap(allowedthreads_, other->allowedthreads_);
  std::swap(enableht_, other->enableht_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ComputerInformation::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ComputerInformation

// uint32 allowedThreads = 1;
void ComputerInformation::clear_allowedthreads() {
  allowedthreads_ = 0u;
}
::google::protobuf::uint32 ComputerInformation::allowedthreads() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.ComputerInformation.allowedThreads)
  return allowedthreads_;
}
void ComputerInformation::set_allowedthreads(::google::protobuf::uint32 value) {
  
  allowedthreads_ = value;
  // @@protoc_insertion_point(field_set:ProtobufMIST.ComputerInformation.allowedThreads)
}

// uint64 allowedMemory = 2;
void ComputerInformation::clear_allowedmemory() {
  allowedmemory_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ComputerInformation::allowedmemory() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.ComputerInformation.allowedMemory)
  return allowedmemory_;
}
void ComputerInformation::set_allowedmemory(::google::protobuf::uint64 value) {
  
  allowedmemory_ = value;
  // @@protoc_insertion_point(field_set:ProtobufMIST.ComputerInformation.allowedMemory)
}

// bool enableHT = 3;
void ComputerInformation::clear_enableht() {
  enableht_ = false;
}
bool ComputerInformation::enableht() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.ComputerInformation.enableHT)
  return enableht_;
}
void ComputerInformation::set_enableht(bool value) {
  
  enableht_ = value;
  // @@protoc_insertion_point(field_set:ProtobufMIST.ComputerInformation.enableHT)
}

// string name = 4;
void ComputerInformation::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ComputerInformation::name() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.ComputerInformation.name)
  return name_.GetNoArena();
}
void ComputerInformation::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtobufMIST.ComputerInformation.name)
}
void ComputerInformation::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtobufMIST.ComputerInformation.name)
}
void ComputerInformation::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtobufMIST.ComputerInformation.name)
}
::std::string* ComputerInformation::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ProtobufMIST.ComputerInformation.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ComputerInformation::release_name() {
  // @@protoc_insertion_point(field_release:ProtobufMIST.ComputerInformation.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ComputerInformation::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ProtobufMIST.ComputerInformation.name)
}

// string address = 5;
void ComputerInformation::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ComputerInformation::address() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.ComputerInformation.address)
  return address_.GetNoArena();
}
void ComputerInformation::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtobufMIST.ComputerInformation.address)
}
void ComputerInformation::set_address(const char* value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtobufMIST.ComputerInformation.address)
}
void ComputerInformation::set_address(const char* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtobufMIST.ComputerInformation.address)
}
::std::string* ComputerInformation::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:ProtobufMIST.ComputerInformation.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ComputerInformation::release_address() {
  // @@protoc_insertion_point(field_release:ProtobufMIST.ComputerInformation.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ComputerInformation::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:ProtobufMIST.ComputerInformation.address)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Variable_name::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Variable_name::Variable_name()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_MIST_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufMIST.Variable_name)
}
Variable_name::Variable_name(const Variable_name& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:ProtobufMIST.Variable_name)
}

void Variable_name::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Variable_name::~Variable_name() {
  // @@protoc_insertion_point(destructor:ProtobufMIST.Variable_name)
  SharedDtor();
}

void Variable_name::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Variable_name::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Variable_name::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[1].descriptor;
}

const Variable_name& Variable_name::default_instance() {
  protobuf_InitDefaults_MIST_2eproto();
  return *internal_default_instance();
}

Variable_name* Variable_name::New(::google::protobuf::Arena* arena) const {
  Variable_name* n = new Variable_name;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Variable_name::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufMIST.Variable_name)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Variable_name::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufMIST.Variable_name)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtobufMIST.Variable_name.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufMIST.Variable_name)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufMIST.Variable_name)
  return false;
#undef DO_
}

void Variable_name::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufMIST.Variable_name)
  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufMIST.Variable_name.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:ProtobufMIST.Variable_name)
}

::google::protobuf::uint8* Variable_name::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufMIST.Variable_name)
  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufMIST.Variable_name.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ProtobufMIST.Variable_name)
  return target;
}

size_t Variable_name::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufMIST.Variable_name)
  size_t total_size = 0;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Variable_name::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufMIST.Variable_name)
  GOOGLE_DCHECK_NE(&from, this);
  const Variable_name* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Variable_name>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufMIST.Variable_name)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufMIST.Variable_name)
    MergeFrom(*source);
  }
}

void Variable_name::MergeFrom(const Variable_name& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufMIST.Variable_name)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void Variable_name::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufMIST.Variable_name)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Variable_name::CopyFrom(const Variable_name& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufMIST.Variable_name)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Variable_name::IsInitialized() const {
  return true;
}

void Variable_name::Swap(Variable_name* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Variable_name::InternalSwap(Variable_name* other) {
  name_.Swap(&other->name_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Variable_name::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Variable_name

// string name = 1;
void Variable_name::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Variable_name::name() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Variable_name.name)
  return name_.GetNoArena();
}
void Variable_name::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtobufMIST.Variable_name.name)
}
void Variable_name::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtobufMIST.Variable_name.name)
}
void Variable_name::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtobufMIST.Variable_name.name)
}
::std::string* Variable_name::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ProtobufMIST.Variable_name.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Variable_name::release_name() {
  // @@protoc_insertion_point(field_release:ProtobufMIST.Variable_name.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Variable_name::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ProtobufMIST.Variable_name.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Shared_int64::kNameFieldNumber;
const int Shared_int64::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Shared_int64::Shared_int64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_MIST_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufMIST.Shared_int64)
}
Shared_int64::Shared_int64(const Shared_int64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_name()) {
    name_ = new ::ProtobufMIST::Variable_name(*from.name_);
  } else {
    name_ = NULL;
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:ProtobufMIST.Shared_int64)
}

void Shared_int64::SharedCtor() {
  ::memset(&name_, 0, reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&name_) + sizeof(value_));
  _cached_size_ = 0;
}

Shared_int64::~Shared_int64() {
  // @@protoc_insertion_point(destructor:ProtobufMIST.Shared_int64)
  SharedDtor();
}

void Shared_int64::SharedDtor() {
  if (this != internal_default_instance()) {
    delete name_;
  }
}

void Shared_int64::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Shared_int64::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[2].descriptor;
}

const Shared_int64& Shared_int64::default_instance() {
  protobuf_InitDefaults_MIST_2eproto();
  return *internal_default_instance();
}

Shared_int64* Shared_int64::New(::google::protobuf::Arena* arena) const {
  Shared_int64* n = new Shared_int64;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Shared_int64::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufMIST.Shared_int64)
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
  value_ = GOOGLE_LONGLONG(0);
}

bool Shared_int64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufMIST.Shared_int64)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ProtobufMIST.Variable_name name = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 value = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufMIST.Shared_int64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufMIST.Shared_int64)
  return false;
#undef DO_
}

void Shared_int64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufMIST.Shared_int64)
  // .ProtobufMIST.Variable_name name = 1;
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->name_, output);
  }

  // int64 value = 2;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:ProtobufMIST.Shared_int64)
}

::google::protobuf::uint8* Shared_int64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufMIST.Shared_int64)
  // .ProtobufMIST.Variable_name name = 1;
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->name_, false, target);
  }

  // int64 value = 2;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ProtobufMIST.Shared_int64)
  return target;
}

size_t Shared_int64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufMIST.Shared_int64)
  size_t total_size = 0;

  // .ProtobufMIST.Variable_name name = 1;
  if (this->has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->name_);
  }

  // int64 value = 2;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Shared_int64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufMIST.Shared_int64)
  GOOGLE_DCHECK_NE(&from, this);
  const Shared_int64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Shared_int64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufMIST.Shared_int64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufMIST.Shared_int64)
    MergeFrom(*source);
  }
}

void Shared_int64::MergeFrom(const Shared_int64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufMIST.Shared_int64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_name()) {
    mutable_name()->::ProtobufMIST::Variable_name::MergeFrom(from.name());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void Shared_int64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufMIST.Shared_int64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Shared_int64::CopyFrom(const Shared_int64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufMIST.Shared_int64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Shared_int64::IsInitialized() const {
  return true;
}

void Shared_int64::Swap(Shared_int64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Shared_int64::InternalSwap(Shared_int64* other) {
  std::swap(name_, other->name_);
  std::swap(value_, other->value_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Shared_int64::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Shared_int64

// .ProtobufMIST.Variable_name name = 1;
bool Shared_int64::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
void Shared_int64::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) delete name_;
  name_ = NULL;
}
const ::ProtobufMIST::Variable_name& Shared_int64::name() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Shared_int64.name)
  return name_ != NULL ? *name_
                         : *::ProtobufMIST::Variable_name::internal_default_instance();
}
::ProtobufMIST::Variable_name* Shared_int64::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ProtobufMIST::Variable_name;
  }
  // @@protoc_insertion_point(field_mutable:ProtobufMIST.Shared_int64.name)
  return name_;
}
::ProtobufMIST::Variable_name* Shared_int64::release_name() {
  // @@protoc_insertion_point(field_release:ProtobufMIST.Shared_int64.name)
  
  ::ProtobufMIST::Variable_name* temp = name_;
  name_ = NULL;
  return temp;
}
void Shared_int64::set_allocated_name(::ProtobufMIST::Variable_name* name) {
  delete name_;
  name_ = name;
  if (name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ProtobufMIST.Shared_int64.name)
}

// int64 value = 2;
void Shared_int64::clear_value() {
  value_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Shared_int64::value() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Shared_int64.value)
  return value_;
}
void Shared_int64::set_value(::google::protobuf::int64 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:ProtobufMIST.Shared_int64.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Shared_uint64::kNameFieldNumber;
const int Shared_uint64::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Shared_uint64::Shared_uint64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_MIST_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufMIST.Shared_uint64)
}
Shared_uint64::Shared_uint64(const Shared_uint64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_name()) {
    name_ = new ::ProtobufMIST::Variable_name(*from.name_);
  } else {
    name_ = NULL;
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:ProtobufMIST.Shared_uint64)
}

void Shared_uint64::SharedCtor() {
  ::memset(&name_, 0, reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&name_) + sizeof(value_));
  _cached_size_ = 0;
}

Shared_uint64::~Shared_uint64() {
  // @@protoc_insertion_point(destructor:ProtobufMIST.Shared_uint64)
  SharedDtor();
}

void Shared_uint64::SharedDtor() {
  if (this != internal_default_instance()) {
    delete name_;
  }
}

void Shared_uint64::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Shared_uint64::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[3].descriptor;
}

const Shared_uint64& Shared_uint64::default_instance() {
  protobuf_InitDefaults_MIST_2eproto();
  return *internal_default_instance();
}

Shared_uint64* Shared_uint64::New(::google::protobuf::Arena* arena) const {
  Shared_uint64* n = new Shared_uint64;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Shared_uint64::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufMIST.Shared_uint64)
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
  value_ = GOOGLE_ULONGLONG(0);
}

bool Shared_uint64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufMIST.Shared_uint64)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ProtobufMIST.Variable_name name = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 value = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufMIST.Shared_uint64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufMIST.Shared_uint64)
  return false;
#undef DO_
}

void Shared_uint64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufMIST.Shared_uint64)
  // .ProtobufMIST.Variable_name name = 1;
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->name_, output);
  }

  // uint64 value = 2;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:ProtobufMIST.Shared_uint64)
}

::google::protobuf::uint8* Shared_uint64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufMIST.Shared_uint64)
  // .ProtobufMIST.Variable_name name = 1;
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->name_, false, target);
  }

  // uint64 value = 2;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ProtobufMIST.Shared_uint64)
  return target;
}

size_t Shared_uint64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufMIST.Shared_uint64)
  size_t total_size = 0;

  // .ProtobufMIST.Variable_name name = 1;
  if (this->has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->name_);
  }

  // uint64 value = 2;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Shared_uint64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufMIST.Shared_uint64)
  GOOGLE_DCHECK_NE(&from, this);
  const Shared_uint64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Shared_uint64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufMIST.Shared_uint64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufMIST.Shared_uint64)
    MergeFrom(*source);
  }
}

void Shared_uint64::MergeFrom(const Shared_uint64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufMIST.Shared_uint64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_name()) {
    mutable_name()->::ProtobufMIST::Variable_name::MergeFrom(from.name());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void Shared_uint64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufMIST.Shared_uint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Shared_uint64::CopyFrom(const Shared_uint64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufMIST.Shared_uint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Shared_uint64::IsInitialized() const {
  return true;
}

void Shared_uint64::Swap(Shared_uint64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Shared_uint64::InternalSwap(Shared_uint64* other) {
  std::swap(name_, other->name_);
  std::swap(value_, other->value_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Shared_uint64::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Shared_uint64

// .ProtobufMIST.Variable_name name = 1;
bool Shared_uint64::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
void Shared_uint64::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) delete name_;
  name_ = NULL;
}
const ::ProtobufMIST::Variable_name& Shared_uint64::name() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Shared_uint64.name)
  return name_ != NULL ? *name_
                         : *::ProtobufMIST::Variable_name::internal_default_instance();
}
::ProtobufMIST::Variable_name* Shared_uint64::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ProtobufMIST::Variable_name;
  }
  // @@protoc_insertion_point(field_mutable:ProtobufMIST.Shared_uint64.name)
  return name_;
}
::ProtobufMIST::Variable_name* Shared_uint64::release_name() {
  // @@protoc_insertion_point(field_release:ProtobufMIST.Shared_uint64.name)
  
  ::ProtobufMIST::Variable_name* temp = name_;
  name_ = NULL;
  return temp;
}
void Shared_uint64::set_allocated_name(::ProtobufMIST::Variable_name* name) {
  delete name_;
  name_ = name;
  if (name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ProtobufMIST.Shared_uint64.name)
}

// uint64 value = 2;
void Shared_uint64::clear_value() {
  value_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 Shared_uint64::value() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Shared_uint64.value)
  return value_;
}
void Shared_uint64::set_value(::google::protobuf::uint64 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:ProtobufMIST.Shared_uint64.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Shared_int32::kNameFieldNumber;
const int Shared_int32::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Shared_int32::Shared_int32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_MIST_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufMIST.Shared_int32)
}
Shared_int32::Shared_int32(const Shared_int32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_name()) {
    name_ = new ::ProtobufMIST::Variable_name(*from.name_);
  } else {
    name_ = NULL;
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:ProtobufMIST.Shared_int32)
}

void Shared_int32::SharedCtor() {
  ::memset(&name_, 0, reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&name_) + sizeof(value_));
  _cached_size_ = 0;
}

Shared_int32::~Shared_int32() {
  // @@protoc_insertion_point(destructor:ProtobufMIST.Shared_int32)
  SharedDtor();
}

void Shared_int32::SharedDtor() {
  if (this != internal_default_instance()) {
    delete name_;
  }
}

void Shared_int32::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Shared_int32::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[4].descriptor;
}

const Shared_int32& Shared_int32::default_instance() {
  protobuf_InitDefaults_MIST_2eproto();
  return *internal_default_instance();
}

Shared_int32* Shared_int32::New(::google::protobuf::Arena* arena) const {
  Shared_int32* n = new Shared_int32;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Shared_int32::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufMIST.Shared_int32)
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
  value_ = GOOGLE_LONGLONG(0);
}

bool Shared_int32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufMIST.Shared_int32)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ProtobufMIST.Variable_name name = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 value = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufMIST.Shared_int32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufMIST.Shared_int32)
  return false;
#undef DO_
}

void Shared_int32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufMIST.Shared_int32)
  // .ProtobufMIST.Variable_name name = 1;
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->name_, output);
  }

  // int64 value = 2;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:ProtobufMIST.Shared_int32)
}

::google::protobuf::uint8* Shared_int32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufMIST.Shared_int32)
  // .ProtobufMIST.Variable_name name = 1;
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->name_, false, target);
  }

  // int64 value = 2;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ProtobufMIST.Shared_int32)
  return target;
}

size_t Shared_int32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufMIST.Shared_int32)
  size_t total_size = 0;

  // .ProtobufMIST.Variable_name name = 1;
  if (this->has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->name_);
  }

  // int64 value = 2;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Shared_int32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufMIST.Shared_int32)
  GOOGLE_DCHECK_NE(&from, this);
  const Shared_int32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Shared_int32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufMIST.Shared_int32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufMIST.Shared_int32)
    MergeFrom(*source);
  }
}

void Shared_int32::MergeFrom(const Shared_int32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufMIST.Shared_int32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_name()) {
    mutable_name()->::ProtobufMIST::Variable_name::MergeFrom(from.name());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void Shared_int32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufMIST.Shared_int32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Shared_int32::CopyFrom(const Shared_int32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufMIST.Shared_int32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Shared_int32::IsInitialized() const {
  return true;
}

void Shared_int32::Swap(Shared_int32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Shared_int32::InternalSwap(Shared_int32* other) {
  std::swap(name_, other->name_);
  std::swap(value_, other->value_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Shared_int32::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Shared_int32

// .ProtobufMIST.Variable_name name = 1;
bool Shared_int32::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
void Shared_int32::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) delete name_;
  name_ = NULL;
}
const ::ProtobufMIST::Variable_name& Shared_int32::name() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Shared_int32.name)
  return name_ != NULL ? *name_
                         : *::ProtobufMIST::Variable_name::internal_default_instance();
}
::ProtobufMIST::Variable_name* Shared_int32::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ProtobufMIST::Variable_name;
  }
  // @@protoc_insertion_point(field_mutable:ProtobufMIST.Shared_int32.name)
  return name_;
}
::ProtobufMIST::Variable_name* Shared_int32::release_name() {
  // @@protoc_insertion_point(field_release:ProtobufMIST.Shared_int32.name)
  
  ::ProtobufMIST::Variable_name* temp = name_;
  name_ = NULL;
  return temp;
}
void Shared_int32::set_allocated_name(::ProtobufMIST::Variable_name* name) {
  delete name_;
  name_ = name;
  if (name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ProtobufMIST.Shared_int32.name)
}

// int64 value = 2;
void Shared_int32::clear_value() {
  value_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Shared_int32::value() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Shared_int32.value)
  return value_;
}
void Shared_int32::set_value(::google::protobuf::int64 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:ProtobufMIST.Shared_int32.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Shared_uint32::kNameFieldNumber;
const int Shared_uint32::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Shared_uint32::Shared_uint32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_MIST_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufMIST.Shared_uint32)
}
Shared_uint32::Shared_uint32(const Shared_uint32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_name()) {
    name_ = new ::ProtobufMIST::Variable_name(*from.name_);
  } else {
    name_ = NULL;
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:ProtobufMIST.Shared_uint32)
}

void Shared_uint32::SharedCtor() {
  ::memset(&name_, 0, reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&name_) + sizeof(value_));
  _cached_size_ = 0;
}

Shared_uint32::~Shared_uint32() {
  // @@protoc_insertion_point(destructor:ProtobufMIST.Shared_uint32)
  SharedDtor();
}

void Shared_uint32::SharedDtor() {
  if (this != internal_default_instance()) {
    delete name_;
  }
}

void Shared_uint32::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Shared_uint32::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[5].descriptor;
}

const Shared_uint32& Shared_uint32::default_instance() {
  protobuf_InitDefaults_MIST_2eproto();
  return *internal_default_instance();
}

Shared_uint32* Shared_uint32::New(::google::protobuf::Arena* arena) const {
  Shared_uint32* n = new Shared_uint32;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Shared_uint32::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufMIST.Shared_uint32)
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
  value_ = GOOGLE_ULONGLONG(0);
}

bool Shared_uint32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufMIST.Shared_uint32)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ProtobufMIST.Variable_name name = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 value = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufMIST.Shared_uint32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufMIST.Shared_uint32)
  return false;
#undef DO_
}

void Shared_uint32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufMIST.Shared_uint32)
  // .ProtobufMIST.Variable_name name = 1;
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->name_, output);
  }

  // uint64 value = 2;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:ProtobufMIST.Shared_uint32)
}

::google::protobuf::uint8* Shared_uint32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufMIST.Shared_uint32)
  // .ProtobufMIST.Variable_name name = 1;
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->name_, false, target);
  }

  // uint64 value = 2;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ProtobufMIST.Shared_uint32)
  return target;
}

size_t Shared_uint32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufMIST.Shared_uint32)
  size_t total_size = 0;

  // .ProtobufMIST.Variable_name name = 1;
  if (this->has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->name_);
  }

  // uint64 value = 2;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Shared_uint32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufMIST.Shared_uint32)
  GOOGLE_DCHECK_NE(&from, this);
  const Shared_uint32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Shared_uint32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufMIST.Shared_uint32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufMIST.Shared_uint32)
    MergeFrom(*source);
  }
}

void Shared_uint32::MergeFrom(const Shared_uint32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufMIST.Shared_uint32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_name()) {
    mutable_name()->::ProtobufMIST::Variable_name::MergeFrom(from.name());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void Shared_uint32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufMIST.Shared_uint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Shared_uint32::CopyFrom(const Shared_uint32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufMIST.Shared_uint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Shared_uint32::IsInitialized() const {
  return true;
}

void Shared_uint32::Swap(Shared_uint32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Shared_uint32::InternalSwap(Shared_uint32* other) {
  std::swap(name_, other->name_);
  std::swap(value_, other->value_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Shared_uint32::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[5];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Shared_uint32

// .ProtobufMIST.Variable_name name = 1;
bool Shared_uint32::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
void Shared_uint32::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) delete name_;
  name_ = NULL;
}
const ::ProtobufMIST::Variable_name& Shared_uint32::name() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Shared_uint32.name)
  return name_ != NULL ? *name_
                         : *::ProtobufMIST::Variable_name::internal_default_instance();
}
::ProtobufMIST::Variable_name* Shared_uint32::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ProtobufMIST::Variable_name;
  }
  // @@protoc_insertion_point(field_mutable:ProtobufMIST.Shared_uint32.name)
  return name_;
}
::ProtobufMIST::Variable_name* Shared_uint32::release_name() {
  // @@protoc_insertion_point(field_release:ProtobufMIST.Shared_uint32.name)
  
  ::ProtobufMIST::Variable_name* temp = name_;
  name_ = NULL;
  return temp;
}
void Shared_uint32::set_allocated_name(::ProtobufMIST::Variable_name* name) {
  delete name_;
  name_ = name;
  if (name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ProtobufMIST.Shared_uint32.name)
}

// uint64 value = 2;
void Shared_uint32::clear_value() {
  value_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 Shared_uint32::value() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Shared_uint32.value)
  return value_;
}
void Shared_uint32::set_value(::google::protobuf::uint64 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:ProtobufMIST.Shared_uint32.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Shared_bytes::kNameFieldNumber;
const int Shared_bytes::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Shared_bytes::Shared_bytes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_MIST_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufMIST.Shared_bytes)
}
Shared_bytes::Shared_bytes(const Shared_bytes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.has_name()) {
    name_ = new ::ProtobufMIST::Variable_name(*from.name_);
  } else {
    name_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ProtobufMIST.Shared_bytes)
}

void Shared_bytes::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_ = NULL;
  _cached_size_ = 0;
}

Shared_bytes::~Shared_bytes() {
  // @@protoc_insertion_point(destructor:ProtobufMIST.Shared_bytes)
  SharedDtor();
}

void Shared_bytes::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete name_;
  }
}

void Shared_bytes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Shared_bytes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[6].descriptor;
}

const Shared_bytes& Shared_bytes::default_instance() {
  protobuf_InitDefaults_MIST_2eproto();
  return *internal_default_instance();
}

Shared_bytes* Shared_bytes::New(::google::protobuf::Arena* arena) const {
  Shared_bytes* n = new Shared_bytes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Shared_bytes::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufMIST.Shared_bytes)
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
}

bool Shared_bytes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufMIST.Shared_bytes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ProtobufMIST.Variable_name name = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufMIST.Shared_bytes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufMIST.Shared_bytes)
  return false;
#undef DO_
}

void Shared_bytes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufMIST.Shared_bytes)
  // .ProtobufMIST.Variable_name name = 1;
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->name_, output);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:ProtobufMIST.Shared_bytes)
}

::google::protobuf::uint8* Shared_bytes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufMIST.Shared_bytes)
  // .ProtobufMIST.Variable_name name = 1;
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->name_, false, target);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ProtobufMIST.Shared_bytes)
  return target;
}

size_t Shared_bytes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufMIST.Shared_bytes)
  size_t total_size = 0;

  // bytes value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  // .ProtobufMIST.Variable_name name = 1;
  if (this->has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->name_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Shared_bytes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufMIST.Shared_bytes)
  GOOGLE_DCHECK_NE(&from, this);
  const Shared_bytes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Shared_bytes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufMIST.Shared_bytes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufMIST.Shared_bytes)
    MergeFrom(*source);
  }
}

void Shared_bytes::MergeFrom(const Shared_bytes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufMIST.Shared_bytes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.has_name()) {
    mutable_name()->::ProtobufMIST::Variable_name::MergeFrom(from.name());
  }
}

void Shared_bytes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufMIST.Shared_bytes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Shared_bytes::CopyFrom(const Shared_bytes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufMIST.Shared_bytes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Shared_bytes::IsInitialized() const {
  return true;
}

void Shared_bytes::Swap(Shared_bytes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Shared_bytes::InternalSwap(Shared_bytes* other) {
  value_.Swap(&other->value_);
  std::swap(name_, other->name_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Shared_bytes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[6];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Shared_bytes

// .ProtobufMIST.Variable_name name = 1;
bool Shared_bytes::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
void Shared_bytes::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) delete name_;
  name_ = NULL;
}
const ::ProtobufMIST::Variable_name& Shared_bytes::name() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Shared_bytes.name)
  return name_ != NULL ? *name_
                         : *::ProtobufMIST::Variable_name::internal_default_instance();
}
::ProtobufMIST::Variable_name* Shared_bytes::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ProtobufMIST::Variable_name;
  }
  // @@protoc_insertion_point(field_mutable:ProtobufMIST.Shared_bytes.name)
  return name_;
}
::ProtobufMIST::Variable_name* Shared_bytes::release_name() {
  // @@protoc_insertion_point(field_release:ProtobufMIST.Shared_bytes.name)
  
  ::ProtobufMIST::Variable_name* temp = name_;
  name_ = NULL;
  return temp;
}
void Shared_bytes::set_allocated_name(::ProtobufMIST::Variable_name* name) {
  delete name_;
  name_ = name;
  if (name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ProtobufMIST.Shared_bytes.name)
}

// bytes value = 2;
void Shared_bytes::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Shared_bytes::value() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Shared_bytes.value)
  return value_.GetNoArena();
}
void Shared_bytes::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtobufMIST.Shared_bytes.value)
}
void Shared_bytes::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtobufMIST.Shared_bytes.value)
}
void Shared_bytes::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtobufMIST.Shared_bytes.value)
}
::std::string* Shared_bytes::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:ProtobufMIST.Shared_bytes.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Shared_bytes::release_value() {
  // @@protoc_insertion_point(field_release:ProtobufMIST.Shared_bytes.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Shared_bytes::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:ProtobufMIST.Shared_bytes.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Shared_bool::kNameFieldNumber;
const int Shared_bool::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Shared_bool::Shared_bool()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_MIST_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufMIST.Shared_bool)
}
Shared_bool::Shared_bool(const Shared_bool& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_name()) {
    name_ = new ::ProtobufMIST::Variable_name(*from.name_);
  } else {
    name_ = NULL;
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:ProtobufMIST.Shared_bool)
}

void Shared_bool::SharedCtor() {
  ::memset(&name_, 0, reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&name_) + sizeof(value_));
  _cached_size_ = 0;
}

Shared_bool::~Shared_bool() {
  // @@protoc_insertion_point(destructor:ProtobufMIST.Shared_bool)
  SharedDtor();
}

void Shared_bool::SharedDtor() {
  if (this != internal_default_instance()) {
    delete name_;
  }
}

void Shared_bool::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Shared_bool::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[7].descriptor;
}

const Shared_bool& Shared_bool::default_instance() {
  protobuf_InitDefaults_MIST_2eproto();
  return *internal_default_instance();
}

Shared_bool* Shared_bool::New(::google::protobuf::Arena* arena) const {
  Shared_bool* n = new Shared_bool;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Shared_bool::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufMIST.Shared_bool)
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
  value_ = false;
}

bool Shared_bool::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufMIST.Shared_bool)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ProtobufMIST.Variable_name name = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool value = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufMIST.Shared_bool)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufMIST.Shared_bool)
  return false;
#undef DO_
}

void Shared_bool::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufMIST.Shared_bool)
  // .ProtobufMIST.Variable_name name = 1;
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->name_, output);
  }

  // bool value = 2;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:ProtobufMIST.Shared_bool)
}

::google::protobuf::uint8* Shared_bool::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufMIST.Shared_bool)
  // .ProtobufMIST.Variable_name name = 1;
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->name_, false, target);
  }

  // bool value = 2;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ProtobufMIST.Shared_bool)
  return target;
}

size_t Shared_bool::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufMIST.Shared_bool)
  size_t total_size = 0;

  // .ProtobufMIST.Variable_name name = 1;
  if (this->has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->name_);
  }

  // bool value = 2;
  if (this->value() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Shared_bool::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufMIST.Shared_bool)
  GOOGLE_DCHECK_NE(&from, this);
  const Shared_bool* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Shared_bool>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufMIST.Shared_bool)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufMIST.Shared_bool)
    MergeFrom(*source);
  }
}

void Shared_bool::MergeFrom(const Shared_bool& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufMIST.Shared_bool)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_name()) {
    mutable_name()->::ProtobufMIST::Variable_name::MergeFrom(from.name());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void Shared_bool::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufMIST.Shared_bool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Shared_bool::CopyFrom(const Shared_bool& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufMIST.Shared_bool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Shared_bool::IsInitialized() const {
  return true;
}

void Shared_bool::Swap(Shared_bool* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Shared_bool::InternalSwap(Shared_bool* other) {
  std::swap(name_, other->name_);
  std::swap(value_, other->value_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Shared_bool::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[7];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Shared_bool

// .ProtobufMIST.Variable_name name = 1;
bool Shared_bool::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
void Shared_bool::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) delete name_;
  name_ = NULL;
}
const ::ProtobufMIST::Variable_name& Shared_bool::name() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Shared_bool.name)
  return name_ != NULL ? *name_
                         : *::ProtobufMIST::Variable_name::internal_default_instance();
}
::ProtobufMIST::Variable_name* Shared_bool::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ProtobufMIST::Variable_name;
  }
  // @@protoc_insertion_point(field_mutable:ProtobufMIST.Shared_bool.name)
  return name_;
}
::ProtobufMIST::Variable_name* Shared_bool::release_name() {
  // @@protoc_insertion_point(field_release:ProtobufMIST.Shared_bool.name)
  
  ::ProtobufMIST::Variable_name* temp = name_;
  name_ = NULL;
  return temp;
}
void Shared_bool::set_allocated_name(::ProtobufMIST::Variable_name* name) {
  delete name_;
  name_ = name;
  if (name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ProtobufMIST.Shared_bool.name)
}

// bool value = 2;
void Shared_bool::clear_value() {
  value_ = false;
}
bool Shared_bool::value() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Shared_bool.value)
  return value_;
}
void Shared_bool::set_value(bool value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:ProtobufMIST.Shared_bool.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Shared_float::kNameFieldNumber;
const int Shared_float::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Shared_float::Shared_float()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_MIST_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufMIST.Shared_float)
}
Shared_float::Shared_float(const Shared_float& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_name()) {
    name_ = new ::ProtobufMIST::Variable_name(*from.name_);
  } else {
    name_ = NULL;
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:ProtobufMIST.Shared_float)
}

void Shared_float::SharedCtor() {
  ::memset(&name_, 0, reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&name_) + sizeof(value_));
  _cached_size_ = 0;
}

Shared_float::~Shared_float() {
  // @@protoc_insertion_point(destructor:ProtobufMIST.Shared_float)
  SharedDtor();
}

void Shared_float::SharedDtor() {
  if (this != internal_default_instance()) {
    delete name_;
  }
}

void Shared_float::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Shared_float::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[8].descriptor;
}

const Shared_float& Shared_float::default_instance() {
  protobuf_InitDefaults_MIST_2eproto();
  return *internal_default_instance();
}

Shared_float* Shared_float::New(::google::protobuf::Arena* arena) const {
  Shared_float* n = new Shared_float;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Shared_float::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufMIST.Shared_float)
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
  value_ = 0;
}

bool Shared_float::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufMIST.Shared_float)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ProtobufMIST.Variable_name name = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float value = 2;
      case 2: {
        if (tag == 21u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufMIST.Shared_float)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufMIST.Shared_float)
  return false;
#undef DO_
}

void Shared_float::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufMIST.Shared_float)
  // .ProtobufMIST.Variable_name name = 1;
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->name_, output);
  }

  // float value = 2;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:ProtobufMIST.Shared_float)
}

::google::protobuf::uint8* Shared_float::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufMIST.Shared_float)
  // .ProtobufMIST.Variable_name name = 1;
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->name_, false, target);
  }

  // float value = 2;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ProtobufMIST.Shared_float)
  return target;
}

size_t Shared_float::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufMIST.Shared_float)
  size_t total_size = 0;

  // .ProtobufMIST.Variable_name name = 1;
  if (this->has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->name_);
  }

  // float value = 2;
  if (this->value() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Shared_float::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufMIST.Shared_float)
  GOOGLE_DCHECK_NE(&from, this);
  const Shared_float* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Shared_float>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufMIST.Shared_float)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufMIST.Shared_float)
    MergeFrom(*source);
  }
}

void Shared_float::MergeFrom(const Shared_float& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufMIST.Shared_float)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_name()) {
    mutable_name()->::ProtobufMIST::Variable_name::MergeFrom(from.name());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void Shared_float::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufMIST.Shared_float)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Shared_float::CopyFrom(const Shared_float& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufMIST.Shared_float)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Shared_float::IsInitialized() const {
  return true;
}

void Shared_float::Swap(Shared_float* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Shared_float::InternalSwap(Shared_float* other) {
  std::swap(name_, other->name_);
  std::swap(value_, other->value_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Shared_float::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[8];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Shared_float

// .ProtobufMIST.Variable_name name = 1;
bool Shared_float::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
void Shared_float::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) delete name_;
  name_ = NULL;
}
const ::ProtobufMIST::Variable_name& Shared_float::name() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Shared_float.name)
  return name_ != NULL ? *name_
                         : *::ProtobufMIST::Variable_name::internal_default_instance();
}
::ProtobufMIST::Variable_name* Shared_float::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ProtobufMIST::Variable_name;
  }
  // @@protoc_insertion_point(field_mutable:ProtobufMIST.Shared_float.name)
  return name_;
}
::ProtobufMIST::Variable_name* Shared_float::release_name() {
  // @@protoc_insertion_point(field_release:ProtobufMIST.Shared_float.name)
  
  ::ProtobufMIST::Variable_name* temp = name_;
  name_ = NULL;
  return temp;
}
void Shared_float::set_allocated_name(::ProtobufMIST::Variable_name* name) {
  delete name_;
  name_ = name;
  if (name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ProtobufMIST.Shared_float.name)
}

// float value = 2;
void Shared_float::clear_value() {
  value_ = 0;
}
float Shared_float::value() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Shared_float.value)
  return value_;
}
void Shared_float::set_value(float value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:ProtobufMIST.Shared_float.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Shared_double::kNameFieldNumber;
const int Shared_double::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Shared_double::Shared_double()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_MIST_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufMIST.Shared_double)
}
Shared_double::Shared_double(const Shared_double& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_name()) {
    name_ = new ::ProtobufMIST::Variable_name(*from.name_);
  } else {
    name_ = NULL;
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:ProtobufMIST.Shared_double)
}

void Shared_double::SharedCtor() {
  ::memset(&name_, 0, reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&name_) + sizeof(value_));
  _cached_size_ = 0;
}

Shared_double::~Shared_double() {
  // @@protoc_insertion_point(destructor:ProtobufMIST.Shared_double)
  SharedDtor();
}

void Shared_double::SharedDtor() {
  if (this != internal_default_instance()) {
    delete name_;
  }
}

void Shared_double::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Shared_double::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[9].descriptor;
}

const Shared_double& Shared_double::default_instance() {
  protobuf_InitDefaults_MIST_2eproto();
  return *internal_default_instance();
}

Shared_double* Shared_double::New(::google::protobuf::Arena* arena) const {
  Shared_double* n = new Shared_double;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Shared_double::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufMIST.Shared_double)
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
  value_ = 0;
}

bool Shared_double::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufMIST.Shared_double)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ProtobufMIST.Variable_name name = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double value = 2;
      case 2: {
        if (tag == 17u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufMIST.Shared_double)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufMIST.Shared_double)
  return false;
#undef DO_
}

void Shared_double::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufMIST.Shared_double)
  // .ProtobufMIST.Variable_name name = 1;
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->name_, output);
  }

  // double value = 2;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:ProtobufMIST.Shared_double)
}

::google::protobuf::uint8* Shared_double::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufMIST.Shared_double)
  // .ProtobufMIST.Variable_name name = 1;
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->name_, false, target);
  }

  // double value = 2;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ProtobufMIST.Shared_double)
  return target;
}

size_t Shared_double::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufMIST.Shared_double)
  size_t total_size = 0;

  // .ProtobufMIST.Variable_name name = 1;
  if (this->has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->name_);
  }

  // double value = 2;
  if (this->value() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Shared_double::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufMIST.Shared_double)
  GOOGLE_DCHECK_NE(&from, this);
  const Shared_double* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Shared_double>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufMIST.Shared_double)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufMIST.Shared_double)
    MergeFrom(*source);
  }
}

void Shared_double::MergeFrom(const Shared_double& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufMIST.Shared_double)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_name()) {
    mutable_name()->::ProtobufMIST::Variable_name::MergeFrom(from.name());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void Shared_double::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufMIST.Shared_double)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Shared_double::CopyFrom(const Shared_double& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufMIST.Shared_double)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Shared_double::IsInitialized() const {
  return true;
}

void Shared_double::Swap(Shared_double* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Shared_double::InternalSwap(Shared_double* other) {
  std::swap(name_, other->name_);
  std::swap(value_, other->value_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Shared_double::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[9];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Shared_double

// .ProtobufMIST.Variable_name name = 1;
bool Shared_double::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
void Shared_double::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) delete name_;
  name_ = NULL;
}
const ::ProtobufMIST::Variable_name& Shared_double::name() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Shared_double.name)
  return name_ != NULL ? *name_
                         : *::ProtobufMIST::Variable_name::internal_default_instance();
}
::ProtobufMIST::Variable_name* Shared_double::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ProtobufMIST::Variable_name;
  }
  // @@protoc_insertion_point(field_mutable:ProtobufMIST.Shared_double.name)
  return name_;
}
::ProtobufMIST::Variable_name* Shared_double::release_name() {
  // @@protoc_insertion_point(field_release:ProtobufMIST.Shared_double.name)
  
  ::ProtobufMIST::Variable_name* temp = name_;
  name_ = NULL;
  return temp;
}
void Shared_double::set_allocated_name(::ProtobufMIST::Variable_name* name) {
  delete name_;
  name_ = name;
  if (name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ProtobufMIST.Shared_double.name)
}

// double value = 2;
void Shared_double::clear_value() {
  value_ = 0;
}
double Shared_double::value() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Shared_double.value)
  return value_;
}
void Shared_double::set_value(double value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:ProtobufMIST.Shared_double.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Shared_string::kNameFieldNumber;
const int Shared_string::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Shared_string::Shared_string()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_MIST_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufMIST.Shared_string)
}
Shared_string::Shared_string(const Shared_string& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.has_name()) {
    name_ = new ::ProtobufMIST::Variable_name(*from.name_);
  } else {
    name_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ProtobufMIST.Shared_string)
}

void Shared_string::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_ = NULL;
  _cached_size_ = 0;
}

Shared_string::~Shared_string() {
  // @@protoc_insertion_point(destructor:ProtobufMIST.Shared_string)
  SharedDtor();
}

void Shared_string::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete name_;
  }
}

void Shared_string::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Shared_string::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[10].descriptor;
}

const Shared_string& Shared_string::default_instance() {
  protobuf_InitDefaults_MIST_2eproto();
  return *internal_default_instance();
}

Shared_string* Shared_string::New(::google::protobuf::Arena* arena) const {
  Shared_string* n = new Shared_string;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Shared_string::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufMIST.Shared_string)
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
}

bool Shared_string::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufMIST.Shared_string)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ProtobufMIST.Variable_name name = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string value = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtobufMIST.Shared_string.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufMIST.Shared_string)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufMIST.Shared_string)
  return false;
#undef DO_
}

void Shared_string::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufMIST.Shared_string)
  // .ProtobufMIST.Variable_name name = 1;
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->name_, output);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufMIST.Shared_string.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:ProtobufMIST.Shared_string)
}

::google::protobuf::uint8* Shared_string::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufMIST.Shared_string)
  // .ProtobufMIST.Variable_name name = 1;
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->name_, false, target);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufMIST.Shared_string.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ProtobufMIST.Shared_string)
  return target;
}

size_t Shared_string::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufMIST.Shared_string)
  size_t total_size = 0;

  // string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  // .ProtobufMIST.Variable_name name = 1;
  if (this->has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->name_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Shared_string::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufMIST.Shared_string)
  GOOGLE_DCHECK_NE(&from, this);
  const Shared_string* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Shared_string>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufMIST.Shared_string)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufMIST.Shared_string)
    MergeFrom(*source);
  }
}

void Shared_string::MergeFrom(const Shared_string& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufMIST.Shared_string)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.has_name()) {
    mutable_name()->::ProtobufMIST::Variable_name::MergeFrom(from.name());
  }
}

void Shared_string::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufMIST.Shared_string)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Shared_string::CopyFrom(const Shared_string& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufMIST.Shared_string)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Shared_string::IsInitialized() const {
  return true;
}

void Shared_string::Swap(Shared_string* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Shared_string::InternalSwap(Shared_string* other) {
  value_.Swap(&other->value_);
  std::swap(name_, other->name_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Shared_string::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[10];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Shared_string

// .ProtobufMIST.Variable_name name = 1;
bool Shared_string::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
void Shared_string::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) delete name_;
  name_ = NULL;
}
const ::ProtobufMIST::Variable_name& Shared_string::name() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Shared_string.name)
  return name_ != NULL ? *name_
                         : *::ProtobufMIST::Variable_name::internal_default_instance();
}
::ProtobufMIST::Variable_name* Shared_string::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ProtobufMIST::Variable_name;
  }
  // @@protoc_insertion_point(field_mutable:ProtobufMIST.Shared_string.name)
  return name_;
}
::ProtobufMIST::Variable_name* Shared_string::release_name() {
  // @@protoc_insertion_point(field_release:ProtobufMIST.Shared_string.name)
  
  ::ProtobufMIST::Variable_name* temp = name_;
  name_ = NULL;
  return temp;
}
void Shared_string::set_allocated_name(::ProtobufMIST::Variable_name* name) {
  delete name_;
  name_ = name;
  if (name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ProtobufMIST.Shared_string.name)
}

// string value = 2;
void Shared_string::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Shared_string::value() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Shared_string.value)
  return value_.GetNoArena();
}
void Shared_string::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtobufMIST.Shared_string.value)
}
void Shared_string::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtobufMIST.Shared_string.value)
}
void Shared_string::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtobufMIST.Shared_string.value)
}
::std::string* Shared_string::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:ProtobufMIST.Shared_string.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Shared_string::release_value() {
  // @@protoc_insertion_point(field_release:ProtobufMIST.Shared_string.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Shared_string::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:ProtobufMIST.Shared_string.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Network::kComputersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Network::Network()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_MIST_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufMIST.Network)
}
Network::Network(const Network& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      computers_(from.computers_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ProtobufMIST.Network)
}

void Network::SharedCtor() {
  _cached_size_ = 0;
}

Network::~Network() {
  // @@protoc_insertion_point(destructor:ProtobufMIST.Network)
  SharedDtor();
}

void Network::SharedDtor() {
}

void Network::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Network::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[11].descriptor;
}

const Network& Network::default_instance() {
  protobuf_InitDefaults_MIST_2eproto();
  return *internal_default_instance();
}

Network* Network::New(::google::protobuf::Arena* arena) const {
  Network* n = new Network;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Network::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufMIST.Network)
  computers_.Clear();
}

bool Network::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufMIST.Network)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtobufMIST.ComputerInformation computers = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_computers()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufMIST.Network)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufMIST.Network)
  return false;
#undef DO_
}

void Network::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufMIST.Network)
  // repeated .ProtobufMIST.ComputerInformation computers = 1;
  for (unsigned int i = 0, n = this->computers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->computers(i), output);
  }

  // @@protoc_insertion_point(serialize_end:ProtobufMIST.Network)
}

::google::protobuf::uint8* Network::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufMIST.Network)
  // repeated .ProtobufMIST.ComputerInformation computers = 1;
  for (unsigned int i = 0, n = this->computers_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->computers(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ProtobufMIST.Network)
  return target;
}

size_t Network::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufMIST.Network)
  size_t total_size = 0;

  // repeated .ProtobufMIST.ComputerInformation computers = 1;
  {
    unsigned int count = this->computers_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->computers(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Network::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufMIST.Network)
  GOOGLE_DCHECK_NE(&from, this);
  const Network* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Network>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufMIST.Network)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufMIST.Network)
    MergeFrom(*source);
  }
}

void Network::MergeFrom(const Network& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufMIST.Network)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  computers_.MergeFrom(from.computers_);
}

void Network::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufMIST.Network)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Network::CopyFrom(const Network& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufMIST.Network)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Network::IsInitialized() const {
  return true;
}

void Network::Swap(Network* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Network::InternalSwap(Network* other) {
  computers_.UnsafeArenaSwap(&other->computers_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Network::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[11];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Network

// repeated .ProtobufMIST.ComputerInformation computers = 1;
int Network::computers_size() const {
  return computers_.size();
}
void Network::clear_computers() {
  computers_.Clear();
}
const ::ProtobufMIST::ComputerInformation& Network::computers(int index) const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Network.computers)
  return computers_.Get(index);
}
::ProtobufMIST::ComputerInformation* Network::mutable_computers(int index) {
  // @@protoc_insertion_point(field_mutable:ProtobufMIST.Network.computers)
  return computers_.Mutable(index);
}
::ProtobufMIST::ComputerInformation* Network::add_computers() {
  // @@protoc_insertion_point(field_add:ProtobufMIST.Network.computers)
  return computers_.Add();
}
::google::protobuf::RepeatedPtrField< ::ProtobufMIST::ComputerInformation >*
Network::mutable_computers() {
  // @@protoc_insertion_point(field_mutable_list:ProtobufMIST.Network.computers)
  return &computers_;
}
const ::google::protobuf::RepeatedPtrField< ::ProtobufMIST::ComputerInformation >&
Network::computers() const {
  // @@protoc_insertion_point(field_list:ProtobufMIST.Network.computers)
  return computers_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Task::kTaskNameFieldNumber;
const int Task::kTaskIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Task::Task()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_MIST_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufMIST.Task)
}
Task::Task(const Task& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  task_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.task_name().size() > 0) {
    task_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.task_name_);
  }
  task_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.task_id().size() > 0) {
    task_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.task_id_);
  }
  // @@protoc_insertion_point(copy_constructor:ProtobufMIST.Task)
}

void Task::SharedCtor() {
  task_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  task_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Task::~Task() {
  // @@protoc_insertion_point(destructor:ProtobufMIST.Task)
  SharedDtor();
}

void Task::SharedDtor() {
  task_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  task_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Task::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Task::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[12].descriptor;
}

const Task& Task::default_instance() {
  protobuf_InitDefaults_MIST_2eproto();
  return *internal_default_instance();
}

Task* Task::New(::google::protobuf::Arena* arena) const {
  Task* n = new Task;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Task::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufMIST.Task)
  task_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  task_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Task::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufMIST.Task)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string task_name = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_task_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->task_name().data(), this->task_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtobufMIST.Task.task_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string task_id = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_task_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->task_id().data(), this->task_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtobufMIST.Task.task_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufMIST.Task)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufMIST.Task)
  return false;
#undef DO_
}

void Task::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufMIST.Task)
  // string task_name = 1;
  if (this->task_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->task_name().data(), this->task_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufMIST.Task.task_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->task_name(), output);
  }

  // string task_id = 2;
  if (this->task_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->task_id().data(), this->task_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufMIST.Task.task_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->task_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:ProtobufMIST.Task)
}

::google::protobuf::uint8* Task::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufMIST.Task)
  // string task_name = 1;
  if (this->task_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->task_name().data(), this->task_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufMIST.Task.task_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->task_name(), target);
  }

  // string task_id = 2;
  if (this->task_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->task_id().data(), this->task_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufMIST.Task.task_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->task_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ProtobufMIST.Task)
  return target;
}

size_t Task::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufMIST.Task)
  size_t total_size = 0;

  // string task_name = 1;
  if (this->task_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->task_name());
  }

  // string task_id = 2;
  if (this->task_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->task_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Task::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufMIST.Task)
  GOOGLE_DCHECK_NE(&from, this);
  const Task* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Task>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufMIST.Task)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufMIST.Task)
    MergeFrom(*source);
  }
}

void Task::MergeFrom(const Task& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufMIST.Task)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.task_name().size() > 0) {

    task_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.task_name_);
  }
  if (from.task_id().size() > 0) {

    task_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.task_id_);
  }
}

void Task::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufMIST.Task)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Task::CopyFrom(const Task& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufMIST.Task)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Task::IsInitialized() const {
  return true;
}

void Task::Swap(Task* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Task::InternalSwap(Task* other) {
  task_name_.Swap(&other->task_name_);
  task_id_.Swap(&other->task_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Task::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[12];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Task

// string task_name = 1;
void Task::clear_task_name() {
  task_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Task::task_name() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Task.task_name)
  return task_name_.GetNoArena();
}
void Task::set_task_name(const ::std::string& value) {
  
  task_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtobufMIST.Task.task_name)
}
void Task::set_task_name(const char* value) {
  
  task_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtobufMIST.Task.task_name)
}
void Task::set_task_name(const char* value, size_t size) {
  
  task_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtobufMIST.Task.task_name)
}
::std::string* Task::mutable_task_name() {
  
  // @@protoc_insertion_point(field_mutable:ProtobufMIST.Task.task_name)
  return task_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Task::release_task_name() {
  // @@protoc_insertion_point(field_release:ProtobufMIST.Task.task_name)
  
  return task_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Task::set_allocated_task_name(::std::string* task_name) {
  if (task_name != NULL) {
    
  } else {
    
  }
  task_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), task_name);
  // @@protoc_insertion_point(field_set_allocated:ProtobufMIST.Task.task_name)
}

// string task_id = 2;
void Task::clear_task_id() {
  task_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Task::task_id() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Task.task_id)
  return task_id_.GetNoArena();
}
void Task::set_task_id(const ::std::string& value) {
  
  task_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtobufMIST.Task.task_id)
}
void Task::set_task_id(const char* value) {
  
  task_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtobufMIST.Task.task_id)
}
void Task::set_task_id(const char* value, size_t size) {
  
  task_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtobufMIST.Task.task_id)
}
::std::string* Task::mutable_task_id() {
  
  // @@protoc_insertion_point(field_mutable:ProtobufMIST.Task.task_id)
  return task_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Task::release_task_id() {
  // @@protoc_insertion_point(field_release:ProtobufMIST.Task.task_id)
  
  return task_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Task::set_allocated_task_id(::std::string* task_id) {
  if (task_id != NULL) {
    
  } else {
    
  }
  task_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), task_id);
  // @@protoc_insertion_point(field_set_allocated:ProtobufMIST.Task.task_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtobufMIST

// @@protoc_insertion_point(global_scope)
