// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MIST.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MIST.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ProtobufMIST {

namespace {

const ::google::protobuf::Descriptor* ComputerInformation_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ComputerInformation_reflection_ = NULL;
const ::google::protobuf::Descriptor* Variable_name_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Variable_name_reflection_ = NULL;
const ::google::protobuf::Descriptor* Shared_int64_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Shared_int64_reflection_ = NULL;
const ::google::protobuf::Descriptor* Shared_uint64_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Shared_uint64_reflection_ = NULL;
const ::google::protobuf::Descriptor* Shared_int32_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Shared_int32_reflection_ = NULL;
const ::google::protobuf::Descriptor* Shared_uint32_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Shared_uint32_reflection_ = NULL;
const ::google::protobuf::Descriptor* Shared_bytes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Shared_bytes_reflection_ = NULL;
const ::google::protobuf::Descriptor* Shared_bool_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Shared_bool_reflection_ = NULL;
const ::google::protobuf::Descriptor* Shared_float_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Shared_float_reflection_ = NULL;
const ::google::protobuf::Descriptor* Shared_double_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Shared_double_reflection_ = NULL;
const ::google::protobuf::Descriptor* Shared_string_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Shared_string_reflection_ = NULL;
const ::google::protobuf::Descriptor* Network_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Network_reflection_ = NULL;
const ::google::protobuf::Descriptor* Task_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Task_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_MIST_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_MIST_2eproto() {
  protobuf_AddDesc_MIST_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MIST.proto");
  GOOGLE_CHECK(file != NULL);
  ComputerInformation_descriptor_ = file->message_type(0);
  static const int ComputerInformation_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComputerInformation, allowedthreads_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComputerInformation, allowedmemory_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComputerInformation, enableht_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComputerInformation, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComputerInformation, address_),
  };
  ComputerInformation_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ComputerInformation_descriptor_,
      ComputerInformation::internal_default_instance(),
      ComputerInformation_offsets_,
      -1,
      -1,
      -1,
      sizeof(ComputerInformation),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComputerInformation, _internal_metadata_));
  Variable_name_descriptor_ = file->message_type(1);
  static const int Variable_name_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Variable_name, name_),
  };
  Variable_name_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Variable_name_descriptor_,
      Variable_name::internal_default_instance(),
      Variable_name_offsets_,
      -1,
      -1,
      -1,
      sizeof(Variable_name),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Variable_name, _internal_metadata_));
  Shared_int64_descriptor_ = file->message_type(2);
  static const int Shared_int64_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shared_int64, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shared_int64, value_),
  };
  Shared_int64_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Shared_int64_descriptor_,
      Shared_int64::internal_default_instance(),
      Shared_int64_offsets_,
      -1,
      -1,
      -1,
      sizeof(Shared_int64),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shared_int64, _internal_metadata_));
  Shared_uint64_descriptor_ = file->message_type(3);
  static const int Shared_uint64_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shared_uint64, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shared_uint64, value_),
  };
  Shared_uint64_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Shared_uint64_descriptor_,
      Shared_uint64::internal_default_instance(),
      Shared_uint64_offsets_,
      -1,
      -1,
      -1,
      sizeof(Shared_uint64),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shared_uint64, _internal_metadata_));
  Shared_int32_descriptor_ = file->message_type(4);
  static const int Shared_int32_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shared_int32, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shared_int32, value_),
  };
  Shared_int32_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Shared_int32_descriptor_,
      Shared_int32::internal_default_instance(),
      Shared_int32_offsets_,
      -1,
      -1,
      -1,
      sizeof(Shared_int32),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shared_int32, _internal_metadata_));
  Shared_uint32_descriptor_ = file->message_type(5);
  static const int Shared_uint32_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shared_uint32, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shared_uint32, value_),
  };
  Shared_uint32_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Shared_uint32_descriptor_,
      Shared_uint32::internal_default_instance(),
      Shared_uint32_offsets_,
      -1,
      -1,
      -1,
      sizeof(Shared_uint32),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shared_uint32, _internal_metadata_));
  Shared_bytes_descriptor_ = file->message_type(6);
  static const int Shared_bytes_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shared_bytes, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shared_bytes, value_),
  };
  Shared_bytes_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Shared_bytes_descriptor_,
      Shared_bytes::internal_default_instance(),
      Shared_bytes_offsets_,
      -1,
      -1,
      -1,
      sizeof(Shared_bytes),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shared_bytes, _internal_metadata_));
  Shared_bool_descriptor_ = file->message_type(7);
  static const int Shared_bool_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shared_bool, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shared_bool, value_),
  };
  Shared_bool_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Shared_bool_descriptor_,
      Shared_bool::internal_default_instance(),
      Shared_bool_offsets_,
      -1,
      -1,
      -1,
      sizeof(Shared_bool),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shared_bool, _internal_metadata_));
  Shared_float_descriptor_ = file->message_type(8);
  static const int Shared_float_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shared_float, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shared_float, value_),
  };
  Shared_float_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Shared_float_descriptor_,
      Shared_float::internal_default_instance(),
      Shared_float_offsets_,
      -1,
      -1,
      -1,
      sizeof(Shared_float),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shared_float, _internal_metadata_));
  Shared_double_descriptor_ = file->message_type(9);
  static const int Shared_double_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shared_double, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shared_double, value_),
  };
  Shared_double_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Shared_double_descriptor_,
      Shared_double::internal_default_instance(),
      Shared_double_offsets_,
      -1,
      -1,
      -1,
      sizeof(Shared_double),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shared_double, _internal_metadata_));
  Shared_string_descriptor_ = file->message_type(10);
  static const int Shared_string_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shared_string, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shared_string, value_),
  };
  Shared_string_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Shared_string_descriptor_,
      Shared_string::internal_default_instance(),
      Shared_string_offsets_,
      -1,
      -1,
      -1,
      sizeof(Shared_string),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shared_string, _internal_metadata_));
  Network_descriptor_ = file->message_type(11);
  static const int Network_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Network, computers_),
  };
  Network_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Network_descriptor_,
      Network::internal_default_instance(),
      Network_offsets_,
      -1,
      -1,
      -1,
      sizeof(Network),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Network, _internal_metadata_));
  Task_descriptor_ = file->message_type(12);
  static const int Task_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Task, task_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Task, task_id_),
  };
  Task_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Task_descriptor_,
      Task::internal_default_instance(),
      Task_offsets_,
      -1,
      -1,
      -1,
      sizeof(Task),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Task, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MIST_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ComputerInformation_descriptor_, ComputerInformation::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Variable_name_descriptor_, Variable_name::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Shared_int64_descriptor_, Shared_int64::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Shared_uint64_descriptor_, Shared_uint64::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Shared_int32_descriptor_, Shared_int32::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Shared_uint32_descriptor_, Shared_uint32::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Shared_bytes_descriptor_, Shared_bytes::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Shared_bool_descriptor_, Shared_bool::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Shared_float_descriptor_, Shared_float::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Shared_double_descriptor_, Shared_double::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Shared_string_descriptor_, Shared_string::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Network_descriptor_, Network::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Task_descriptor_, Task::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MIST_2eproto() {
  ComputerInformation_default_instance_.Shutdown();
  delete ComputerInformation_reflection_;
  Variable_name_default_instance_.Shutdown();
  delete Variable_name_reflection_;
  Shared_int64_default_instance_.Shutdown();
  delete Shared_int64_reflection_;
  Shared_uint64_default_instance_.Shutdown();
  delete Shared_uint64_reflection_;
  Shared_int32_default_instance_.Shutdown();
  delete Shared_int32_reflection_;
  Shared_uint32_default_instance_.Shutdown();
  delete Shared_uint32_reflection_;
  Shared_bytes_default_instance_.Shutdown();
  delete Shared_bytes_reflection_;
  Shared_bool_default_instance_.Shutdown();
  delete Shared_bool_reflection_;
  Shared_float_default_instance_.Shutdown();
  delete Shared_float_reflection_;
  Shared_double_default_instance_.Shutdown();
  delete Shared_double_reflection_;
  Shared_string_default_instance_.Shutdown();
  delete Shared_string_reflection_;
  Network_default_instance_.Shutdown();
  delete Network_reflection_;
  Task_default_instance_.Shutdown();
  delete Task_reflection_;
}

void protobuf_InitDefaults_MIST_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  ComputerInformation_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  Variable_name_default_instance_.DefaultConstruct();
  Shared_int64_default_instance_.DefaultConstruct();
  Shared_uint64_default_instance_.DefaultConstruct();
  Shared_int32_default_instance_.DefaultConstruct();
  Shared_uint32_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  Shared_bytes_default_instance_.DefaultConstruct();
  Shared_bool_default_instance_.DefaultConstruct();
  Shared_float_default_instance_.DefaultConstruct();
  Shared_double_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  Shared_string_default_instance_.DefaultConstruct();
  Network_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  Task_default_instance_.DefaultConstruct();
  ComputerInformation_default_instance_.get_mutable()->InitAsDefaultInstance();
  Variable_name_default_instance_.get_mutable()->InitAsDefaultInstance();
  Shared_int64_default_instance_.get_mutable()->InitAsDefaultInstance();
  Shared_uint64_default_instance_.get_mutable()->InitAsDefaultInstance();
  Shared_int32_default_instance_.get_mutable()->InitAsDefaultInstance();
  Shared_uint32_default_instance_.get_mutable()->InitAsDefaultInstance();
  Shared_bytes_default_instance_.get_mutable()->InitAsDefaultInstance();
  Shared_bool_default_instance_.get_mutable()->InitAsDefaultInstance();
  Shared_float_default_instance_.get_mutable()->InitAsDefaultInstance();
  Shared_double_default_instance_.get_mutable()->InitAsDefaultInstance();
  Shared_string_default_instance_.get_mutable()->InitAsDefaultInstance();
  Network_default_instance_.get_mutable()->InitAsDefaultInstance();
  Task_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_MIST_2eproto_once_);
void protobuf_InitDefaults_MIST_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_MIST_2eproto_once_,
                 &protobuf_InitDefaults_MIST_2eproto_impl);
}
void protobuf_AddDesc_MIST_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_MIST_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\nMIST.proto\022\014ProtobufMIST\"u\n\023ComputerIn"
    "formation\022\026\n\016allowedThreads\030\001 \001(\r\022\025\n\rall"
    "owedMemory\030\002 \001(\004\022\020\n\010enableHT\030\003 \001(\010\022\014\n\004na"
    "me\030\004 \001(\t\022\017\n\007address\030\005 \001(\t\"\035\n\rVariable_na"
    "me\022\014\n\004name\030\001 \001(\t\"H\n\014Shared_int64\022)\n\004name"
    "\030\001 \001(\0132\033.ProtobufMIST.Variable_name\022\r\n\005v"
    "alue\030\002 \001(\003\"I\n\rShared_uint64\022)\n\004name\030\001 \001("
    "\0132\033.ProtobufMIST.Variable_name\022\r\n\005value\030"
    "\002 \001(\004\"H\n\014Shared_int32\022)\n\004name\030\001 \001(\0132\033.Pr"
    "otobufMIST.Variable_name\022\r\n\005value\030\002 \001(\003\""
    "I\n\rShared_uint32\022)\n\004name\030\001 \001(\0132\033.Protobu"
    "fMIST.Variable_name\022\r\n\005value\030\002 \001(\004\"H\n\014Sh"
    "ared_bytes\022)\n\004name\030\001 \001(\0132\033.ProtobufMIST."
    "Variable_name\022\r\n\005value\030\002 \001(\014\"G\n\013Shared_b"
    "ool\022)\n\004name\030\001 \001(\0132\033.ProtobufMIST.Variabl"
    "e_name\022\r\n\005value\030\002 \001(\010\"H\n\014Shared_float\022)\n"
    "\004name\030\001 \001(\0132\033.ProtobufMIST.Variable_name"
    "\022\r\n\005value\030\002 \001(\002\"I\n\rShared_double\022)\n\004name"
    "\030\001 \001(\0132\033.ProtobufMIST.Variable_name\022\r\n\005v"
    "alue\030\002 \001(\001\"I\n\rShared_string\022)\n\004name\030\001 \001("
    "\0132\033.ProtobufMIST.Variable_name\022\r\n\005value\030"
    "\002 \001(\t\"\?\n\007Network\0224\n\tcomputers\030\001 \003(\0132!.Pr"
    "otobufMIST.ComputerInformation\"*\n\004Task\022\021"
    "\n\ttask_name\030\001 \001(\t\022\017\n\007task_id\030\002 \001(\003B\002H\001b\006"
    "proto3", 966);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MIST.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MIST_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_MIST_2eproto_once_);
void protobuf_AddDesc_MIST_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_MIST_2eproto_once_,
                 &protobuf_AddDesc_MIST_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MIST_2eproto {
  StaticDescriptorInitializer_MIST_2eproto() {
    protobuf_AddDesc_MIST_2eproto();
  }
} static_descriptor_initializer_MIST_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ComputerInformation::kAllowedThreadsFieldNumber;
const int ComputerInformation::kAllowedMemoryFieldNumber;
const int ComputerInformation::kEnableHTFieldNumber;
const int ComputerInformation::kNameFieldNumber;
const int ComputerInformation::kAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ComputerInformation::ComputerInformation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_MIST_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufMIST.ComputerInformation)
}

void ComputerInformation::InitAsDefaultInstance() {
}

ComputerInformation::ComputerInformation(const ComputerInformation& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtobufMIST.ComputerInformation)
}

void ComputerInformation::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&allowedmemory_, 0, reinterpret_cast<char*>(&enableht_) -
    reinterpret_cast<char*>(&allowedmemory_) + sizeof(enableht_));
  _cached_size_ = 0;
}

ComputerInformation::~ComputerInformation() {
  // @@protoc_insertion_point(destructor:ProtobufMIST.ComputerInformation)
  SharedDtor();
}

void ComputerInformation::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ComputerInformation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ComputerInformation::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ComputerInformation_descriptor_;
}

const ComputerInformation& ComputerInformation::default_instance() {
  protobuf_InitDefaults_MIST_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ComputerInformation> ComputerInformation_default_instance_;

ComputerInformation* ComputerInformation::New(::google::protobuf::Arena* arena) const {
  ComputerInformation* n = new ComputerInformation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ComputerInformation::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufMIST.ComputerInformation)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ComputerInformation, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ComputerInformation*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(allowedmemory_, enableht_);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool ComputerInformation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufMIST.ComputerInformation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 allowedThreads = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &allowedthreads_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_allowedMemory;
        break;
      }

      // optional uint64 allowedMemory = 2;
      case 2: {
        if (tag == 16) {
         parse_allowedMemory:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &allowedmemory_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_enableHT;
        break;
      }

      // optional bool enableHT = 3;
      case 3: {
        if (tag == 24) {
         parse_enableHT:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enableht_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_name;
        break;
      }

      // optional string name = 4;
      case 4: {
        if (tag == 34) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtobufMIST.ComputerInformation.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_address;
        break;
      }

      // optional string address = 5;
      case 5: {
        if (tag == 42) {
         parse_address:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), this->address().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtobufMIST.ComputerInformation.address"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufMIST.ComputerInformation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufMIST.ComputerInformation)
  return false;
#undef DO_
}

void ComputerInformation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufMIST.ComputerInformation)
  // optional uint32 allowedThreads = 1;
  if (this->allowedthreads() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->allowedthreads(), output);
  }

  // optional uint64 allowedMemory = 2;
  if (this->allowedmemory() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->allowedmemory(), output);
  }

  // optional bool enableHT = 3;
  if (this->enableht() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->enableht(), output);
  }

  // optional string name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufMIST.ComputerInformation.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->name(), output);
  }

  // optional string address = 5;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufMIST.ComputerInformation.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->address(), output);
  }

  // @@protoc_insertion_point(serialize_end:ProtobufMIST.ComputerInformation)
}

::google::protobuf::uint8* ComputerInformation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufMIST.ComputerInformation)
  // optional uint32 allowedThreads = 1;
  if (this->allowedthreads() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->allowedthreads(), target);
  }

  // optional uint64 allowedMemory = 2;
  if (this->allowedmemory() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->allowedmemory(), target);
  }

  // optional bool enableHT = 3;
  if (this->enableht() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->enableht(), target);
  }

  // optional string name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufMIST.ComputerInformation.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  // optional string address = 5;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufMIST.ComputerInformation.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->address(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ProtobufMIST.ComputerInformation)
  return target;
}

size_t ComputerInformation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufMIST.ComputerInformation)
  size_t total_size = 0;

  // optional uint32 allowedThreads = 1;
  if (this->allowedthreads() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->allowedthreads());
  }

  // optional uint64 allowedMemory = 2;
  if (this->allowedmemory() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->allowedmemory());
  }

  // optional bool enableHT = 3;
  if (this->enableht() != 0) {
    total_size += 1 + 1;
  }

  // optional string name = 4;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string address = 5;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ComputerInformation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufMIST.ComputerInformation)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ComputerInformation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ComputerInformation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufMIST.ComputerInformation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufMIST.ComputerInformation)
    UnsafeMergeFrom(*source);
  }
}

void ComputerInformation::MergeFrom(const ComputerInformation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufMIST.ComputerInformation)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ComputerInformation::UnsafeMergeFrom(const ComputerInformation& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.allowedthreads() != 0) {
    set_allowedthreads(from.allowedthreads());
  }
  if (from.allowedmemory() != 0) {
    set_allowedmemory(from.allowedmemory());
  }
  if (from.enableht() != 0) {
    set_enableht(from.enableht());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
}

void ComputerInformation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufMIST.ComputerInformation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ComputerInformation::CopyFrom(const ComputerInformation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufMIST.ComputerInformation)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ComputerInformation::IsInitialized() const {

  return true;
}

void ComputerInformation::Swap(ComputerInformation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ComputerInformation::InternalSwap(ComputerInformation* other) {
  std::swap(allowedthreads_, other->allowedthreads_);
  std::swap(allowedmemory_, other->allowedmemory_);
  std::swap(enableht_, other->enableht_);
  name_.Swap(&other->name_);
  address_.Swap(&other->address_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ComputerInformation::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ComputerInformation_descriptor_;
  metadata.reflection = ComputerInformation_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ComputerInformation

// optional uint32 allowedThreads = 1;
void ComputerInformation::clear_allowedthreads() {
  allowedthreads_ = 0u;
}
::google::protobuf::uint32 ComputerInformation::allowedthreads() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.ComputerInformation.allowedThreads)
  return allowedthreads_;
}
void ComputerInformation::set_allowedthreads(::google::protobuf::uint32 value) {
  
  allowedthreads_ = value;
  // @@protoc_insertion_point(field_set:ProtobufMIST.ComputerInformation.allowedThreads)
}

// optional uint64 allowedMemory = 2;
void ComputerInformation::clear_allowedmemory() {
  allowedmemory_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ComputerInformation::allowedmemory() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.ComputerInformation.allowedMemory)
  return allowedmemory_;
}
void ComputerInformation::set_allowedmemory(::google::protobuf::uint64 value) {
  
  allowedmemory_ = value;
  // @@protoc_insertion_point(field_set:ProtobufMIST.ComputerInformation.allowedMemory)
}

// optional bool enableHT = 3;
void ComputerInformation::clear_enableht() {
  enableht_ = false;
}
bool ComputerInformation::enableht() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.ComputerInformation.enableHT)
  return enableht_;
}
void ComputerInformation::set_enableht(bool value) {
  
  enableht_ = value;
  // @@protoc_insertion_point(field_set:ProtobufMIST.ComputerInformation.enableHT)
}

// optional string name = 4;
void ComputerInformation::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ComputerInformation::name() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.ComputerInformation.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ComputerInformation::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtobufMIST.ComputerInformation.name)
}
void ComputerInformation::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtobufMIST.ComputerInformation.name)
}
void ComputerInformation::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtobufMIST.ComputerInformation.name)
}
::std::string* ComputerInformation::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ProtobufMIST.ComputerInformation.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ComputerInformation::release_name() {
  // @@protoc_insertion_point(field_release:ProtobufMIST.ComputerInformation.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ComputerInformation::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ProtobufMIST.ComputerInformation.name)
}

// optional string address = 5;
void ComputerInformation::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ComputerInformation::address() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.ComputerInformation.address)
  return address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ComputerInformation::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtobufMIST.ComputerInformation.address)
}
void ComputerInformation::set_address(const char* value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtobufMIST.ComputerInformation.address)
}
void ComputerInformation::set_address(const char* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtobufMIST.ComputerInformation.address)
}
::std::string* ComputerInformation::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:ProtobufMIST.ComputerInformation.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ComputerInformation::release_address() {
  // @@protoc_insertion_point(field_release:ProtobufMIST.ComputerInformation.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ComputerInformation::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:ProtobufMIST.ComputerInformation.address)
}

inline const ComputerInformation* ComputerInformation::internal_default_instance() {
  return &ComputerInformation_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Variable_name::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Variable_name::Variable_name()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_MIST_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufMIST.Variable_name)
}

void Variable_name::InitAsDefaultInstance() {
}

Variable_name::Variable_name(const Variable_name& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtobufMIST.Variable_name)
}

void Variable_name::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Variable_name::~Variable_name() {
  // @@protoc_insertion_point(destructor:ProtobufMIST.Variable_name)
  SharedDtor();
}

void Variable_name::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Variable_name::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Variable_name::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Variable_name_descriptor_;
}

const Variable_name& Variable_name::default_instance() {
  protobuf_InitDefaults_MIST_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Variable_name> Variable_name_default_instance_;

Variable_name* Variable_name::New(::google::protobuf::Arena* arena) const {
  Variable_name* n = new Variable_name;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Variable_name::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufMIST.Variable_name)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Variable_name::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufMIST.Variable_name)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtobufMIST.Variable_name.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufMIST.Variable_name)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufMIST.Variable_name)
  return false;
#undef DO_
}

void Variable_name::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufMIST.Variable_name)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufMIST.Variable_name.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:ProtobufMIST.Variable_name)
}

::google::protobuf::uint8* Variable_name::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufMIST.Variable_name)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufMIST.Variable_name.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ProtobufMIST.Variable_name)
  return target;
}

size_t Variable_name::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufMIST.Variable_name)
  size_t total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Variable_name::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufMIST.Variable_name)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Variable_name* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Variable_name>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufMIST.Variable_name)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufMIST.Variable_name)
    UnsafeMergeFrom(*source);
  }
}

void Variable_name::MergeFrom(const Variable_name& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufMIST.Variable_name)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Variable_name::UnsafeMergeFrom(const Variable_name& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void Variable_name::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufMIST.Variable_name)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Variable_name::CopyFrom(const Variable_name& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufMIST.Variable_name)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Variable_name::IsInitialized() const {

  return true;
}

void Variable_name::Swap(Variable_name* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Variable_name::InternalSwap(Variable_name* other) {
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Variable_name::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Variable_name_descriptor_;
  metadata.reflection = Variable_name_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Variable_name

// optional string name = 1;
void Variable_name::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Variable_name::name() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Variable_name.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Variable_name::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtobufMIST.Variable_name.name)
}
void Variable_name::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtobufMIST.Variable_name.name)
}
void Variable_name::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtobufMIST.Variable_name.name)
}
::std::string* Variable_name::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ProtobufMIST.Variable_name.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Variable_name::release_name() {
  // @@protoc_insertion_point(field_release:ProtobufMIST.Variable_name.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Variable_name::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ProtobufMIST.Variable_name.name)
}

inline const Variable_name* Variable_name::internal_default_instance() {
  return &Variable_name_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Shared_int64::kNameFieldNumber;
const int Shared_int64::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Shared_int64::Shared_int64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_MIST_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufMIST.Shared_int64)
}

void Shared_int64::InitAsDefaultInstance() {
  name_ = const_cast< ::ProtobufMIST::Variable_name*>(
      ::ProtobufMIST::Variable_name::internal_default_instance());
}

Shared_int64::Shared_int64(const Shared_int64& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtobufMIST.Shared_int64)
}

void Shared_int64::SharedCtor() {
  name_ = NULL;
  value_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

Shared_int64::~Shared_int64() {
  // @@protoc_insertion_point(destructor:ProtobufMIST.Shared_int64)
  SharedDtor();
}

void Shared_int64::SharedDtor() {
  if (this != &Shared_int64_default_instance_.get()) {
    delete name_;
  }
}

void Shared_int64::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Shared_int64::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Shared_int64_descriptor_;
}

const Shared_int64& Shared_int64::default_instance() {
  protobuf_InitDefaults_MIST_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Shared_int64> Shared_int64_default_instance_;

Shared_int64* Shared_int64::New(::google::protobuf::Arena* arena) const {
  Shared_int64* n = new Shared_int64;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Shared_int64::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufMIST.Shared_int64)
  if (GetArenaNoVirtual() == NULL && name_ != NULL) delete name_;
  name_ = NULL;
  value_ = GOOGLE_LONGLONG(0);
}

bool Shared_int64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufMIST.Shared_int64)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ProtobufMIST.Variable_name name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_value;
        break;
      }

      // optional int64 value = 2;
      case 2: {
        if (tag == 16) {
         parse_value:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufMIST.Shared_int64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufMIST.Shared_int64)
  return false;
#undef DO_
}

void Shared_int64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufMIST.Shared_int64)
  // optional .ProtobufMIST.Variable_name name = 1;
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->name_, output);
  }

  // optional int64 value = 2;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:ProtobufMIST.Shared_int64)
}

::google::protobuf::uint8* Shared_int64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufMIST.Shared_int64)
  // optional .ProtobufMIST.Variable_name name = 1;
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->name_, false, target);
  }

  // optional int64 value = 2;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ProtobufMIST.Shared_int64)
  return target;
}

size_t Shared_int64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufMIST.Shared_int64)
  size_t total_size = 0;

  // optional .ProtobufMIST.Variable_name name = 1;
  if (this->has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->name_);
  }

  // optional int64 value = 2;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Shared_int64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufMIST.Shared_int64)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Shared_int64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Shared_int64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufMIST.Shared_int64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufMIST.Shared_int64)
    UnsafeMergeFrom(*source);
  }
}

void Shared_int64::MergeFrom(const Shared_int64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufMIST.Shared_int64)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Shared_int64::UnsafeMergeFrom(const Shared_int64& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_name()) {
    mutable_name()->::ProtobufMIST::Variable_name::MergeFrom(from.name());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void Shared_int64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufMIST.Shared_int64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Shared_int64::CopyFrom(const Shared_int64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufMIST.Shared_int64)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Shared_int64::IsInitialized() const {

  return true;
}

void Shared_int64::Swap(Shared_int64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Shared_int64::InternalSwap(Shared_int64* other) {
  std::swap(name_, other->name_);
  std::swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Shared_int64::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Shared_int64_descriptor_;
  metadata.reflection = Shared_int64_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Shared_int64

// optional .ProtobufMIST.Variable_name name = 1;
bool Shared_int64::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
void Shared_int64::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) delete name_;
  name_ = NULL;
}
const ::ProtobufMIST::Variable_name& Shared_int64::name() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Shared_int64.name)
  return name_ != NULL ? *name_
                         : *::ProtobufMIST::Variable_name::internal_default_instance();
}
::ProtobufMIST::Variable_name* Shared_int64::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ProtobufMIST::Variable_name;
  }
  // @@protoc_insertion_point(field_mutable:ProtobufMIST.Shared_int64.name)
  return name_;
}
::ProtobufMIST::Variable_name* Shared_int64::release_name() {
  // @@protoc_insertion_point(field_release:ProtobufMIST.Shared_int64.name)
  
  ::ProtobufMIST::Variable_name* temp = name_;
  name_ = NULL;
  return temp;
}
void Shared_int64::set_allocated_name(::ProtobufMIST::Variable_name* name) {
  delete name_;
  name_ = name;
  if (name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ProtobufMIST.Shared_int64.name)
}

// optional int64 value = 2;
void Shared_int64::clear_value() {
  value_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Shared_int64::value() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Shared_int64.value)
  return value_;
}
void Shared_int64::set_value(::google::protobuf::int64 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:ProtobufMIST.Shared_int64.value)
}

inline const Shared_int64* Shared_int64::internal_default_instance() {
  return &Shared_int64_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Shared_uint64::kNameFieldNumber;
const int Shared_uint64::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Shared_uint64::Shared_uint64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_MIST_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufMIST.Shared_uint64)
}

void Shared_uint64::InitAsDefaultInstance() {
  name_ = const_cast< ::ProtobufMIST::Variable_name*>(
      ::ProtobufMIST::Variable_name::internal_default_instance());
}

Shared_uint64::Shared_uint64(const Shared_uint64& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtobufMIST.Shared_uint64)
}

void Shared_uint64::SharedCtor() {
  name_ = NULL;
  value_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

Shared_uint64::~Shared_uint64() {
  // @@protoc_insertion_point(destructor:ProtobufMIST.Shared_uint64)
  SharedDtor();
}

void Shared_uint64::SharedDtor() {
  if (this != &Shared_uint64_default_instance_.get()) {
    delete name_;
  }
}

void Shared_uint64::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Shared_uint64::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Shared_uint64_descriptor_;
}

const Shared_uint64& Shared_uint64::default_instance() {
  protobuf_InitDefaults_MIST_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Shared_uint64> Shared_uint64_default_instance_;

Shared_uint64* Shared_uint64::New(::google::protobuf::Arena* arena) const {
  Shared_uint64* n = new Shared_uint64;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Shared_uint64::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufMIST.Shared_uint64)
  if (GetArenaNoVirtual() == NULL && name_ != NULL) delete name_;
  name_ = NULL;
  value_ = GOOGLE_ULONGLONG(0);
}

bool Shared_uint64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufMIST.Shared_uint64)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ProtobufMIST.Variable_name name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_value;
        break;
      }

      // optional uint64 value = 2;
      case 2: {
        if (tag == 16) {
         parse_value:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufMIST.Shared_uint64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufMIST.Shared_uint64)
  return false;
#undef DO_
}

void Shared_uint64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufMIST.Shared_uint64)
  // optional .ProtobufMIST.Variable_name name = 1;
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->name_, output);
  }

  // optional uint64 value = 2;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:ProtobufMIST.Shared_uint64)
}

::google::protobuf::uint8* Shared_uint64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufMIST.Shared_uint64)
  // optional .ProtobufMIST.Variable_name name = 1;
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->name_, false, target);
  }

  // optional uint64 value = 2;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ProtobufMIST.Shared_uint64)
  return target;
}

size_t Shared_uint64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufMIST.Shared_uint64)
  size_t total_size = 0;

  // optional .ProtobufMIST.Variable_name name = 1;
  if (this->has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->name_);
  }

  // optional uint64 value = 2;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Shared_uint64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufMIST.Shared_uint64)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Shared_uint64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Shared_uint64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufMIST.Shared_uint64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufMIST.Shared_uint64)
    UnsafeMergeFrom(*source);
  }
}

void Shared_uint64::MergeFrom(const Shared_uint64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufMIST.Shared_uint64)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Shared_uint64::UnsafeMergeFrom(const Shared_uint64& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_name()) {
    mutable_name()->::ProtobufMIST::Variable_name::MergeFrom(from.name());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void Shared_uint64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufMIST.Shared_uint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Shared_uint64::CopyFrom(const Shared_uint64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufMIST.Shared_uint64)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Shared_uint64::IsInitialized() const {

  return true;
}

void Shared_uint64::Swap(Shared_uint64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Shared_uint64::InternalSwap(Shared_uint64* other) {
  std::swap(name_, other->name_);
  std::swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Shared_uint64::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Shared_uint64_descriptor_;
  metadata.reflection = Shared_uint64_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Shared_uint64

// optional .ProtobufMIST.Variable_name name = 1;
bool Shared_uint64::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
void Shared_uint64::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) delete name_;
  name_ = NULL;
}
const ::ProtobufMIST::Variable_name& Shared_uint64::name() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Shared_uint64.name)
  return name_ != NULL ? *name_
                         : *::ProtobufMIST::Variable_name::internal_default_instance();
}
::ProtobufMIST::Variable_name* Shared_uint64::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ProtobufMIST::Variable_name;
  }
  // @@protoc_insertion_point(field_mutable:ProtobufMIST.Shared_uint64.name)
  return name_;
}
::ProtobufMIST::Variable_name* Shared_uint64::release_name() {
  // @@protoc_insertion_point(field_release:ProtobufMIST.Shared_uint64.name)
  
  ::ProtobufMIST::Variable_name* temp = name_;
  name_ = NULL;
  return temp;
}
void Shared_uint64::set_allocated_name(::ProtobufMIST::Variable_name* name) {
  delete name_;
  name_ = name;
  if (name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ProtobufMIST.Shared_uint64.name)
}

// optional uint64 value = 2;
void Shared_uint64::clear_value() {
  value_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 Shared_uint64::value() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Shared_uint64.value)
  return value_;
}
void Shared_uint64::set_value(::google::protobuf::uint64 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:ProtobufMIST.Shared_uint64.value)
}

inline const Shared_uint64* Shared_uint64::internal_default_instance() {
  return &Shared_uint64_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Shared_int32::kNameFieldNumber;
const int Shared_int32::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Shared_int32::Shared_int32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_MIST_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufMIST.Shared_int32)
}

void Shared_int32::InitAsDefaultInstance() {
  name_ = const_cast< ::ProtobufMIST::Variable_name*>(
      ::ProtobufMIST::Variable_name::internal_default_instance());
}

Shared_int32::Shared_int32(const Shared_int32& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtobufMIST.Shared_int32)
}

void Shared_int32::SharedCtor() {
  name_ = NULL;
  value_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

Shared_int32::~Shared_int32() {
  // @@protoc_insertion_point(destructor:ProtobufMIST.Shared_int32)
  SharedDtor();
}

void Shared_int32::SharedDtor() {
  if (this != &Shared_int32_default_instance_.get()) {
    delete name_;
  }
}

void Shared_int32::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Shared_int32::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Shared_int32_descriptor_;
}

const Shared_int32& Shared_int32::default_instance() {
  protobuf_InitDefaults_MIST_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Shared_int32> Shared_int32_default_instance_;

Shared_int32* Shared_int32::New(::google::protobuf::Arena* arena) const {
  Shared_int32* n = new Shared_int32;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Shared_int32::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufMIST.Shared_int32)
  if (GetArenaNoVirtual() == NULL && name_ != NULL) delete name_;
  name_ = NULL;
  value_ = GOOGLE_LONGLONG(0);
}

bool Shared_int32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufMIST.Shared_int32)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ProtobufMIST.Variable_name name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_value;
        break;
      }

      // optional int64 value = 2;
      case 2: {
        if (tag == 16) {
         parse_value:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufMIST.Shared_int32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufMIST.Shared_int32)
  return false;
#undef DO_
}

void Shared_int32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufMIST.Shared_int32)
  // optional .ProtobufMIST.Variable_name name = 1;
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->name_, output);
  }

  // optional int64 value = 2;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:ProtobufMIST.Shared_int32)
}

::google::protobuf::uint8* Shared_int32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufMIST.Shared_int32)
  // optional .ProtobufMIST.Variable_name name = 1;
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->name_, false, target);
  }

  // optional int64 value = 2;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ProtobufMIST.Shared_int32)
  return target;
}

size_t Shared_int32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufMIST.Shared_int32)
  size_t total_size = 0;

  // optional .ProtobufMIST.Variable_name name = 1;
  if (this->has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->name_);
  }

  // optional int64 value = 2;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Shared_int32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufMIST.Shared_int32)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Shared_int32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Shared_int32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufMIST.Shared_int32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufMIST.Shared_int32)
    UnsafeMergeFrom(*source);
  }
}

void Shared_int32::MergeFrom(const Shared_int32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufMIST.Shared_int32)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Shared_int32::UnsafeMergeFrom(const Shared_int32& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_name()) {
    mutable_name()->::ProtobufMIST::Variable_name::MergeFrom(from.name());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void Shared_int32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufMIST.Shared_int32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Shared_int32::CopyFrom(const Shared_int32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufMIST.Shared_int32)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Shared_int32::IsInitialized() const {

  return true;
}

void Shared_int32::Swap(Shared_int32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Shared_int32::InternalSwap(Shared_int32* other) {
  std::swap(name_, other->name_);
  std::swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Shared_int32::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Shared_int32_descriptor_;
  metadata.reflection = Shared_int32_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Shared_int32

// optional .ProtobufMIST.Variable_name name = 1;
bool Shared_int32::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
void Shared_int32::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) delete name_;
  name_ = NULL;
}
const ::ProtobufMIST::Variable_name& Shared_int32::name() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Shared_int32.name)
  return name_ != NULL ? *name_
                         : *::ProtobufMIST::Variable_name::internal_default_instance();
}
::ProtobufMIST::Variable_name* Shared_int32::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ProtobufMIST::Variable_name;
  }
  // @@protoc_insertion_point(field_mutable:ProtobufMIST.Shared_int32.name)
  return name_;
}
::ProtobufMIST::Variable_name* Shared_int32::release_name() {
  // @@protoc_insertion_point(field_release:ProtobufMIST.Shared_int32.name)
  
  ::ProtobufMIST::Variable_name* temp = name_;
  name_ = NULL;
  return temp;
}
void Shared_int32::set_allocated_name(::ProtobufMIST::Variable_name* name) {
  delete name_;
  name_ = name;
  if (name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ProtobufMIST.Shared_int32.name)
}

// optional int64 value = 2;
void Shared_int32::clear_value() {
  value_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Shared_int32::value() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Shared_int32.value)
  return value_;
}
void Shared_int32::set_value(::google::protobuf::int64 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:ProtobufMIST.Shared_int32.value)
}

inline const Shared_int32* Shared_int32::internal_default_instance() {
  return &Shared_int32_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Shared_uint32::kNameFieldNumber;
const int Shared_uint32::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Shared_uint32::Shared_uint32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_MIST_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufMIST.Shared_uint32)
}

void Shared_uint32::InitAsDefaultInstance() {
  name_ = const_cast< ::ProtobufMIST::Variable_name*>(
      ::ProtobufMIST::Variable_name::internal_default_instance());
}

Shared_uint32::Shared_uint32(const Shared_uint32& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtobufMIST.Shared_uint32)
}

void Shared_uint32::SharedCtor() {
  name_ = NULL;
  value_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

Shared_uint32::~Shared_uint32() {
  // @@protoc_insertion_point(destructor:ProtobufMIST.Shared_uint32)
  SharedDtor();
}

void Shared_uint32::SharedDtor() {
  if (this != &Shared_uint32_default_instance_.get()) {
    delete name_;
  }
}

void Shared_uint32::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Shared_uint32::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Shared_uint32_descriptor_;
}

const Shared_uint32& Shared_uint32::default_instance() {
  protobuf_InitDefaults_MIST_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Shared_uint32> Shared_uint32_default_instance_;

Shared_uint32* Shared_uint32::New(::google::protobuf::Arena* arena) const {
  Shared_uint32* n = new Shared_uint32;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Shared_uint32::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufMIST.Shared_uint32)
  if (GetArenaNoVirtual() == NULL && name_ != NULL) delete name_;
  name_ = NULL;
  value_ = GOOGLE_ULONGLONG(0);
}

bool Shared_uint32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufMIST.Shared_uint32)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ProtobufMIST.Variable_name name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_value;
        break;
      }

      // optional uint64 value = 2;
      case 2: {
        if (tag == 16) {
         parse_value:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufMIST.Shared_uint32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufMIST.Shared_uint32)
  return false;
#undef DO_
}

void Shared_uint32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufMIST.Shared_uint32)
  // optional .ProtobufMIST.Variable_name name = 1;
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->name_, output);
  }

  // optional uint64 value = 2;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:ProtobufMIST.Shared_uint32)
}

::google::protobuf::uint8* Shared_uint32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufMIST.Shared_uint32)
  // optional .ProtobufMIST.Variable_name name = 1;
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->name_, false, target);
  }

  // optional uint64 value = 2;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ProtobufMIST.Shared_uint32)
  return target;
}

size_t Shared_uint32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufMIST.Shared_uint32)
  size_t total_size = 0;

  // optional .ProtobufMIST.Variable_name name = 1;
  if (this->has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->name_);
  }

  // optional uint64 value = 2;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Shared_uint32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufMIST.Shared_uint32)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Shared_uint32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Shared_uint32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufMIST.Shared_uint32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufMIST.Shared_uint32)
    UnsafeMergeFrom(*source);
  }
}

void Shared_uint32::MergeFrom(const Shared_uint32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufMIST.Shared_uint32)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Shared_uint32::UnsafeMergeFrom(const Shared_uint32& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_name()) {
    mutable_name()->::ProtobufMIST::Variable_name::MergeFrom(from.name());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void Shared_uint32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufMIST.Shared_uint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Shared_uint32::CopyFrom(const Shared_uint32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufMIST.Shared_uint32)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Shared_uint32::IsInitialized() const {

  return true;
}

void Shared_uint32::Swap(Shared_uint32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Shared_uint32::InternalSwap(Shared_uint32* other) {
  std::swap(name_, other->name_);
  std::swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Shared_uint32::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Shared_uint32_descriptor_;
  metadata.reflection = Shared_uint32_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Shared_uint32

// optional .ProtobufMIST.Variable_name name = 1;
bool Shared_uint32::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
void Shared_uint32::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) delete name_;
  name_ = NULL;
}
const ::ProtobufMIST::Variable_name& Shared_uint32::name() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Shared_uint32.name)
  return name_ != NULL ? *name_
                         : *::ProtobufMIST::Variable_name::internal_default_instance();
}
::ProtobufMIST::Variable_name* Shared_uint32::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ProtobufMIST::Variable_name;
  }
  // @@protoc_insertion_point(field_mutable:ProtobufMIST.Shared_uint32.name)
  return name_;
}
::ProtobufMIST::Variable_name* Shared_uint32::release_name() {
  // @@protoc_insertion_point(field_release:ProtobufMIST.Shared_uint32.name)
  
  ::ProtobufMIST::Variable_name* temp = name_;
  name_ = NULL;
  return temp;
}
void Shared_uint32::set_allocated_name(::ProtobufMIST::Variable_name* name) {
  delete name_;
  name_ = name;
  if (name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ProtobufMIST.Shared_uint32.name)
}

// optional uint64 value = 2;
void Shared_uint32::clear_value() {
  value_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 Shared_uint32::value() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Shared_uint32.value)
  return value_;
}
void Shared_uint32::set_value(::google::protobuf::uint64 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:ProtobufMIST.Shared_uint32.value)
}

inline const Shared_uint32* Shared_uint32::internal_default_instance() {
  return &Shared_uint32_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Shared_bytes::kNameFieldNumber;
const int Shared_bytes::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Shared_bytes::Shared_bytes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_MIST_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufMIST.Shared_bytes)
}

void Shared_bytes::InitAsDefaultInstance() {
  name_ = const_cast< ::ProtobufMIST::Variable_name*>(
      ::ProtobufMIST::Variable_name::internal_default_instance());
}

Shared_bytes::Shared_bytes(const Shared_bytes& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtobufMIST.Shared_bytes)
}

void Shared_bytes::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_ = NULL;
  _cached_size_ = 0;
}

Shared_bytes::~Shared_bytes() {
  // @@protoc_insertion_point(destructor:ProtobufMIST.Shared_bytes)
  SharedDtor();
}

void Shared_bytes::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &Shared_bytes_default_instance_.get()) {
    delete name_;
  }
}

void Shared_bytes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Shared_bytes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Shared_bytes_descriptor_;
}

const Shared_bytes& Shared_bytes::default_instance() {
  protobuf_InitDefaults_MIST_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Shared_bytes> Shared_bytes_default_instance_;

Shared_bytes* Shared_bytes::New(::google::protobuf::Arena* arena) const {
  Shared_bytes* n = new Shared_bytes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Shared_bytes::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufMIST.Shared_bytes)
  if (GetArenaNoVirtual() == NULL && name_ != NULL) delete name_;
  name_ = NULL;
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Shared_bytes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufMIST.Shared_bytes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ProtobufMIST.Variable_name name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // optional bytes value = 2;
      case 2: {
        if (tag == 18) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufMIST.Shared_bytes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufMIST.Shared_bytes)
  return false;
#undef DO_
}

void Shared_bytes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufMIST.Shared_bytes)
  // optional .ProtobufMIST.Variable_name name = 1;
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->name_, output);
  }

  // optional bytes value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:ProtobufMIST.Shared_bytes)
}

::google::protobuf::uint8* Shared_bytes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufMIST.Shared_bytes)
  // optional .ProtobufMIST.Variable_name name = 1;
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->name_, false, target);
  }

  // optional bytes value = 2;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ProtobufMIST.Shared_bytes)
  return target;
}

size_t Shared_bytes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufMIST.Shared_bytes)
  size_t total_size = 0;

  // optional .ProtobufMIST.Variable_name name = 1;
  if (this->has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->name_);
  }

  // optional bytes value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Shared_bytes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufMIST.Shared_bytes)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Shared_bytes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Shared_bytes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufMIST.Shared_bytes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufMIST.Shared_bytes)
    UnsafeMergeFrom(*source);
  }
}

void Shared_bytes::MergeFrom(const Shared_bytes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufMIST.Shared_bytes)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Shared_bytes::UnsafeMergeFrom(const Shared_bytes& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_name()) {
    mutable_name()->::ProtobufMIST::Variable_name::MergeFrom(from.name());
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void Shared_bytes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufMIST.Shared_bytes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Shared_bytes::CopyFrom(const Shared_bytes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufMIST.Shared_bytes)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Shared_bytes::IsInitialized() const {

  return true;
}

void Shared_bytes::Swap(Shared_bytes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Shared_bytes::InternalSwap(Shared_bytes* other) {
  std::swap(name_, other->name_);
  value_.Swap(&other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Shared_bytes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Shared_bytes_descriptor_;
  metadata.reflection = Shared_bytes_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Shared_bytes

// optional .ProtobufMIST.Variable_name name = 1;
bool Shared_bytes::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
void Shared_bytes::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) delete name_;
  name_ = NULL;
}
const ::ProtobufMIST::Variable_name& Shared_bytes::name() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Shared_bytes.name)
  return name_ != NULL ? *name_
                         : *::ProtobufMIST::Variable_name::internal_default_instance();
}
::ProtobufMIST::Variable_name* Shared_bytes::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ProtobufMIST::Variable_name;
  }
  // @@protoc_insertion_point(field_mutable:ProtobufMIST.Shared_bytes.name)
  return name_;
}
::ProtobufMIST::Variable_name* Shared_bytes::release_name() {
  // @@protoc_insertion_point(field_release:ProtobufMIST.Shared_bytes.name)
  
  ::ProtobufMIST::Variable_name* temp = name_;
  name_ = NULL;
  return temp;
}
void Shared_bytes::set_allocated_name(::ProtobufMIST::Variable_name* name) {
  delete name_;
  name_ = name;
  if (name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ProtobufMIST.Shared_bytes.name)
}

// optional bytes value = 2;
void Shared_bytes::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Shared_bytes::value() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Shared_bytes.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Shared_bytes::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtobufMIST.Shared_bytes.value)
}
void Shared_bytes::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtobufMIST.Shared_bytes.value)
}
void Shared_bytes::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtobufMIST.Shared_bytes.value)
}
::std::string* Shared_bytes::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:ProtobufMIST.Shared_bytes.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Shared_bytes::release_value() {
  // @@protoc_insertion_point(field_release:ProtobufMIST.Shared_bytes.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Shared_bytes::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:ProtobufMIST.Shared_bytes.value)
}

inline const Shared_bytes* Shared_bytes::internal_default_instance() {
  return &Shared_bytes_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Shared_bool::kNameFieldNumber;
const int Shared_bool::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Shared_bool::Shared_bool()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_MIST_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufMIST.Shared_bool)
}

void Shared_bool::InitAsDefaultInstance() {
  name_ = const_cast< ::ProtobufMIST::Variable_name*>(
      ::ProtobufMIST::Variable_name::internal_default_instance());
}

Shared_bool::Shared_bool(const Shared_bool& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtobufMIST.Shared_bool)
}

void Shared_bool::SharedCtor() {
  name_ = NULL;
  value_ = false;
  _cached_size_ = 0;
}

Shared_bool::~Shared_bool() {
  // @@protoc_insertion_point(destructor:ProtobufMIST.Shared_bool)
  SharedDtor();
}

void Shared_bool::SharedDtor() {
  if (this != &Shared_bool_default_instance_.get()) {
    delete name_;
  }
}

void Shared_bool::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Shared_bool::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Shared_bool_descriptor_;
}

const Shared_bool& Shared_bool::default_instance() {
  protobuf_InitDefaults_MIST_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Shared_bool> Shared_bool_default_instance_;

Shared_bool* Shared_bool::New(::google::protobuf::Arena* arena) const {
  Shared_bool* n = new Shared_bool;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Shared_bool::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufMIST.Shared_bool)
  if (GetArenaNoVirtual() == NULL && name_ != NULL) delete name_;
  name_ = NULL;
  value_ = false;
}

bool Shared_bool::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufMIST.Shared_bool)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ProtobufMIST.Variable_name name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_value;
        break;
      }

      // optional bool value = 2;
      case 2: {
        if (tag == 16) {
         parse_value:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufMIST.Shared_bool)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufMIST.Shared_bool)
  return false;
#undef DO_
}

void Shared_bool::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufMIST.Shared_bool)
  // optional .ProtobufMIST.Variable_name name = 1;
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->name_, output);
  }

  // optional bool value = 2;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:ProtobufMIST.Shared_bool)
}

::google::protobuf::uint8* Shared_bool::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufMIST.Shared_bool)
  // optional .ProtobufMIST.Variable_name name = 1;
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->name_, false, target);
  }

  // optional bool value = 2;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ProtobufMIST.Shared_bool)
  return target;
}

size_t Shared_bool::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufMIST.Shared_bool)
  size_t total_size = 0;

  // optional .ProtobufMIST.Variable_name name = 1;
  if (this->has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->name_);
  }

  // optional bool value = 2;
  if (this->value() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Shared_bool::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufMIST.Shared_bool)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Shared_bool* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Shared_bool>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufMIST.Shared_bool)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufMIST.Shared_bool)
    UnsafeMergeFrom(*source);
  }
}

void Shared_bool::MergeFrom(const Shared_bool& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufMIST.Shared_bool)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Shared_bool::UnsafeMergeFrom(const Shared_bool& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_name()) {
    mutable_name()->::ProtobufMIST::Variable_name::MergeFrom(from.name());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void Shared_bool::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufMIST.Shared_bool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Shared_bool::CopyFrom(const Shared_bool& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufMIST.Shared_bool)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Shared_bool::IsInitialized() const {

  return true;
}

void Shared_bool::Swap(Shared_bool* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Shared_bool::InternalSwap(Shared_bool* other) {
  std::swap(name_, other->name_);
  std::swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Shared_bool::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Shared_bool_descriptor_;
  metadata.reflection = Shared_bool_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Shared_bool

// optional .ProtobufMIST.Variable_name name = 1;
bool Shared_bool::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
void Shared_bool::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) delete name_;
  name_ = NULL;
}
const ::ProtobufMIST::Variable_name& Shared_bool::name() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Shared_bool.name)
  return name_ != NULL ? *name_
                         : *::ProtobufMIST::Variable_name::internal_default_instance();
}
::ProtobufMIST::Variable_name* Shared_bool::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ProtobufMIST::Variable_name;
  }
  // @@protoc_insertion_point(field_mutable:ProtobufMIST.Shared_bool.name)
  return name_;
}
::ProtobufMIST::Variable_name* Shared_bool::release_name() {
  // @@protoc_insertion_point(field_release:ProtobufMIST.Shared_bool.name)
  
  ::ProtobufMIST::Variable_name* temp = name_;
  name_ = NULL;
  return temp;
}
void Shared_bool::set_allocated_name(::ProtobufMIST::Variable_name* name) {
  delete name_;
  name_ = name;
  if (name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ProtobufMIST.Shared_bool.name)
}

// optional bool value = 2;
void Shared_bool::clear_value() {
  value_ = false;
}
bool Shared_bool::value() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Shared_bool.value)
  return value_;
}
void Shared_bool::set_value(bool value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:ProtobufMIST.Shared_bool.value)
}

inline const Shared_bool* Shared_bool::internal_default_instance() {
  return &Shared_bool_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Shared_float::kNameFieldNumber;
const int Shared_float::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Shared_float::Shared_float()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_MIST_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufMIST.Shared_float)
}

void Shared_float::InitAsDefaultInstance() {
  name_ = const_cast< ::ProtobufMIST::Variable_name*>(
      ::ProtobufMIST::Variable_name::internal_default_instance());
}

Shared_float::Shared_float(const Shared_float& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtobufMIST.Shared_float)
}

void Shared_float::SharedCtor() {
  name_ = NULL;
  value_ = 0;
  _cached_size_ = 0;
}

Shared_float::~Shared_float() {
  // @@protoc_insertion_point(destructor:ProtobufMIST.Shared_float)
  SharedDtor();
}

void Shared_float::SharedDtor() {
  if (this != &Shared_float_default_instance_.get()) {
    delete name_;
  }
}

void Shared_float::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Shared_float::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Shared_float_descriptor_;
}

const Shared_float& Shared_float::default_instance() {
  protobuf_InitDefaults_MIST_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Shared_float> Shared_float_default_instance_;

Shared_float* Shared_float::New(::google::protobuf::Arena* arena) const {
  Shared_float* n = new Shared_float;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Shared_float::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufMIST.Shared_float)
  if (GetArenaNoVirtual() == NULL && name_ != NULL) delete name_;
  name_ = NULL;
  value_ = 0;
}

bool Shared_float::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufMIST.Shared_float)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ProtobufMIST.Variable_name name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_value;
        break;
      }

      // optional float value = 2;
      case 2: {
        if (tag == 21) {
         parse_value:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufMIST.Shared_float)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufMIST.Shared_float)
  return false;
#undef DO_
}

void Shared_float::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufMIST.Shared_float)
  // optional .ProtobufMIST.Variable_name name = 1;
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->name_, output);
  }

  // optional float value = 2;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:ProtobufMIST.Shared_float)
}

::google::protobuf::uint8* Shared_float::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufMIST.Shared_float)
  // optional .ProtobufMIST.Variable_name name = 1;
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->name_, false, target);
  }

  // optional float value = 2;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ProtobufMIST.Shared_float)
  return target;
}

size_t Shared_float::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufMIST.Shared_float)
  size_t total_size = 0;

  // optional .ProtobufMIST.Variable_name name = 1;
  if (this->has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->name_);
  }

  // optional float value = 2;
  if (this->value() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Shared_float::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufMIST.Shared_float)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Shared_float* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Shared_float>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufMIST.Shared_float)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufMIST.Shared_float)
    UnsafeMergeFrom(*source);
  }
}

void Shared_float::MergeFrom(const Shared_float& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufMIST.Shared_float)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Shared_float::UnsafeMergeFrom(const Shared_float& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_name()) {
    mutable_name()->::ProtobufMIST::Variable_name::MergeFrom(from.name());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void Shared_float::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufMIST.Shared_float)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Shared_float::CopyFrom(const Shared_float& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufMIST.Shared_float)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Shared_float::IsInitialized() const {

  return true;
}

void Shared_float::Swap(Shared_float* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Shared_float::InternalSwap(Shared_float* other) {
  std::swap(name_, other->name_);
  std::swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Shared_float::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Shared_float_descriptor_;
  metadata.reflection = Shared_float_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Shared_float

// optional .ProtobufMIST.Variable_name name = 1;
bool Shared_float::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
void Shared_float::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) delete name_;
  name_ = NULL;
}
const ::ProtobufMIST::Variable_name& Shared_float::name() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Shared_float.name)
  return name_ != NULL ? *name_
                         : *::ProtobufMIST::Variable_name::internal_default_instance();
}
::ProtobufMIST::Variable_name* Shared_float::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ProtobufMIST::Variable_name;
  }
  // @@protoc_insertion_point(field_mutable:ProtobufMIST.Shared_float.name)
  return name_;
}
::ProtobufMIST::Variable_name* Shared_float::release_name() {
  // @@protoc_insertion_point(field_release:ProtobufMIST.Shared_float.name)
  
  ::ProtobufMIST::Variable_name* temp = name_;
  name_ = NULL;
  return temp;
}
void Shared_float::set_allocated_name(::ProtobufMIST::Variable_name* name) {
  delete name_;
  name_ = name;
  if (name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ProtobufMIST.Shared_float.name)
}

// optional float value = 2;
void Shared_float::clear_value() {
  value_ = 0;
}
float Shared_float::value() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Shared_float.value)
  return value_;
}
void Shared_float::set_value(float value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:ProtobufMIST.Shared_float.value)
}

inline const Shared_float* Shared_float::internal_default_instance() {
  return &Shared_float_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Shared_double::kNameFieldNumber;
const int Shared_double::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Shared_double::Shared_double()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_MIST_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufMIST.Shared_double)
}

void Shared_double::InitAsDefaultInstance() {
  name_ = const_cast< ::ProtobufMIST::Variable_name*>(
      ::ProtobufMIST::Variable_name::internal_default_instance());
}

Shared_double::Shared_double(const Shared_double& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtobufMIST.Shared_double)
}

void Shared_double::SharedCtor() {
  name_ = NULL;
  value_ = 0;
  _cached_size_ = 0;
}

Shared_double::~Shared_double() {
  // @@protoc_insertion_point(destructor:ProtobufMIST.Shared_double)
  SharedDtor();
}

void Shared_double::SharedDtor() {
  if (this != &Shared_double_default_instance_.get()) {
    delete name_;
  }
}

void Shared_double::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Shared_double::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Shared_double_descriptor_;
}

const Shared_double& Shared_double::default_instance() {
  protobuf_InitDefaults_MIST_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Shared_double> Shared_double_default_instance_;

Shared_double* Shared_double::New(::google::protobuf::Arena* arena) const {
  Shared_double* n = new Shared_double;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Shared_double::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufMIST.Shared_double)
  if (GetArenaNoVirtual() == NULL && name_ != NULL) delete name_;
  name_ = NULL;
  value_ = 0;
}

bool Shared_double::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufMIST.Shared_double)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ProtobufMIST.Variable_name name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_value;
        break;
      }

      // optional double value = 2;
      case 2: {
        if (tag == 17) {
         parse_value:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufMIST.Shared_double)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufMIST.Shared_double)
  return false;
#undef DO_
}

void Shared_double::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufMIST.Shared_double)
  // optional .ProtobufMIST.Variable_name name = 1;
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->name_, output);
  }

  // optional double value = 2;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:ProtobufMIST.Shared_double)
}

::google::protobuf::uint8* Shared_double::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufMIST.Shared_double)
  // optional .ProtobufMIST.Variable_name name = 1;
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->name_, false, target);
  }

  // optional double value = 2;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ProtobufMIST.Shared_double)
  return target;
}

size_t Shared_double::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufMIST.Shared_double)
  size_t total_size = 0;

  // optional .ProtobufMIST.Variable_name name = 1;
  if (this->has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->name_);
  }

  // optional double value = 2;
  if (this->value() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Shared_double::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufMIST.Shared_double)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Shared_double* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Shared_double>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufMIST.Shared_double)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufMIST.Shared_double)
    UnsafeMergeFrom(*source);
  }
}

void Shared_double::MergeFrom(const Shared_double& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufMIST.Shared_double)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Shared_double::UnsafeMergeFrom(const Shared_double& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_name()) {
    mutable_name()->::ProtobufMIST::Variable_name::MergeFrom(from.name());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void Shared_double::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufMIST.Shared_double)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Shared_double::CopyFrom(const Shared_double& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufMIST.Shared_double)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Shared_double::IsInitialized() const {

  return true;
}

void Shared_double::Swap(Shared_double* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Shared_double::InternalSwap(Shared_double* other) {
  std::swap(name_, other->name_);
  std::swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Shared_double::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Shared_double_descriptor_;
  metadata.reflection = Shared_double_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Shared_double

// optional .ProtobufMIST.Variable_name name = 1;
bool Shared_double::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
void Shared_double::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) delete name_;
  name_ = NULL;
}
const ::ProtobufMIST::Variable_name& Shared_double::name() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Shared_double.name)
  return name_ != NULL ? *name_
                         : *::ProtobufMIST::Variable_name::internal_default_instance();
}
::ProtobufMIST::Variable_name* Shared_double::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ProtobufMIST::Variable_name;
  }
  // @@protoc_insertion_point(field_mutable:ProtobufMIST.Shared_double.name)
  return name_;
}
::ProtobufMIST::Variable_name* Shared_double::release_name() {
  // @@protoc_insertion_point(field_release:ProtobufMIST.Shared_double.name)
  
  ::ProtobufMIST::Variable_name* temp = name_;
  name_ = NULL;
  return temp;
}
void Shared_double::set_allocated_name(::ProtobufMIST::Variable_name* name) {
  delete name_;
  name_ = name;
  if (name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ProtobufMIST.Shared_double.name)
}

// optional double value = 2;
void Shared_double::clear_value() {
  value_ = 0;
}
double Shared_double::value() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Shared_double.value)
  return value_;
}
void Shared_double::set_value(double value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:ProtobufMIST.Shared_double.value)
}

inline const Shared_double* Shared_double::internal_default_instance() {
  return &Shared_double_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Shared_string::kNameFieldNumber;
const int Shared_string::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Shared_string::Shared_string()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_MIST_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufMIST.Shared_string)
}

void Shared_string::InitAsDefaultInstance() {
  name_ = const_cast< ::ProtobufMIST::Variable_name*>(
      ::ProtobufMIST::Variable_name::internal_default_instance());
}

Shared_string::Shared_string(const Shared_string& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtobufMIST.Shared_string)
}

void Shared_string::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_ = NULL;
  _cached_size_ = 0;
}

Shared_string::~Shared_string() {
  // @@protoc_insertion_point(destructor:ProtobufMIST.Shared_string)
  SharedDtor();
}

void Shared_string::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &Shared_string_default_instance_.get()) {
    delete name_;
  }
}

void Shared_string::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Shared_string::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Shared_string_descriptor_;
}

const Shared_string& Shared_string::default_instance() {
  protobuf_InitDefaults_MIST_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Shared_string> Shared_string_default_instance_;

Shared_string* Shared_string::New(::google::protobuf::Arena* arena) const {
  Shared_string* n = new Shared_string;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Shared_string::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufMIST.Shared_string)
  if (GetArenaNoVirtual() == NULL && name_ != NULL) delete name_;
  name_ = NULL;
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Shared_string::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufMIST.Shared_string)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ProtobufMIST.Variable_name name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // optional string value = 2;
      case 2: {
        if (tag == 18) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtobufMIST.Shared_string.value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufMIST.Shared_string)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufMIST.Shared_string)
  return false;
#undef DO_
}

void Shared_string::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufMIST.Shared_string)
  // optional .ProtobufMIST.Variable_name name = 1;
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->name_, output);
  }

  // optional string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufMIST.Shared_string.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:ProtobufMIST.Shared_string)
}

::google::protobuf::uint8* Shared_string::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufMIST.Shared_string)
  // optional .ProtobufMIST.Variable_name name = 1;
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->name_, false, target);
  }

  // optional string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufMIST.Shared_string.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ProtobufMIST.Shared_string)
  return target;
}

size_t Shared_string::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufMIST.Shared_string)
  size_t total_size = 0;

  // optional .ProtobufMIST.Variable_name name = 1;
  if (this->has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->name_);
  }

  // optional string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Shared_string::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufMIST.Shared_string)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Shared_string* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Shared_string>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufMIST.Shared_string)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufMIST.Shared_string)
    UnsafeMergeFrom(*source);
  }
}

void Shared_string::MergeFrom(const Shared_string& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufMIST.Shared_string)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Shared_string::UnsafeMergeFrom(const Shared_string& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_name()) {
    mutable_name()->::ProtobufMIST::Variable_name::MergeFrom(from.name());
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void Shared_string::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufMIST.Shared_string)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Shared_string::CopyFrom(const Shared_string& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufMIST.Shared_string)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Shared_string::IsInitialized() const {

  return true;
}

void Shared_string::Swap(Shared_string* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Shared_string::InternalSwap(Shared_string* other) {
  std::swap(name_, other->name_);
  value_.Swap(&other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Shared_string::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Shared_string_descriptor_;
  metadata.reflection = Shared_string_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Shared_string

// optional .ProtobufMIST.Variable_name name = 1;
bool Shared_string::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
void Shared_string::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) delete name_;
  name_ = NULL;
}
const ::ProtobufMIST::Variable_name& Shared_string::name() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Shared_string.name)
  return name_ != NULL ? *name_
                         : *::ProtobufMIST::Variable_name::internal_default_instance();
}
::ProtobufMIST::Variable_name* Shared_string::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ProtobufMIST::Variable_name;
  }
  // @@protoc_insertion_point(field_mutable:ProtobufMIST.Shared_string.name)
  return name_;
}
::ProtobufMIST::Variable_name* Shared_string::release_name() {
  // @@protoc_insertion_point(field_release:ProtobufMIST.Shared_string.name)
  
  ::ProtobufMIST::Variable_name* temp = name_;
  name_ = NULL;
  return temp;
}
void Shared_string::set_allocated_name(::ProtobufMIST::Variable_name* name) {
  delete name_;
  name_ = name;
  if (name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ProtobufMIST.Shared_string.name)
}

// optional string value = 2;
void Shared_string::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Shared_string::value() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Shared_string.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Shared_string::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtobufMIST.Shared_string.value)
}
void Shared_string::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtobufMIST.Shared_string.value)
}
void Shared_string::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtobufMIST.Shared_string.value)
}
::std::string* Shared_string::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:ProtobufMIST.Shared_string.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Shared_string::release_value() {
  // @@protoc_insertion_point(field_release:ProtobufMIST.Shared_string.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Shared_string::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:ProtobufMIST.Shared_string.value)
}

inline const Shared_string* Shared_string::internal_default_instance() {
  return &Shared_string_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Network::kComputersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Network::Network()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_MIST_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufMIST.Network)
}

void Network::InitAsDefaultInstance() {
}

Network::Network(const Network& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtobufMIST.Network)
}

void Network::SharedCtor() {
  _cached_size_ = 0;
}

Network::~Network() {
  // @@protoc_insertion_point(destructor:ProtobufMIST.Network)
  SharedDtor();
}

void Network::SharedDtor() {
}

void Network::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Network::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Network_descriptor_;
}

const Network& Network::default_instance() {
  protobuf_InitDefaults_MIST_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Network> Network_default_instance_;

Network* Network::New(::google::protobuf::Arena* arena) const {
  Network* n = new Network;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Network::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufMIST.Network)
  computers_.Clear();
}

bool Network::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufMIST.Network)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtobufMIST.ComputerInformation computers = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_computers:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_computers()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_computers;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufMIST.Network)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufMIST.Network)
  return false;
#undef DO_
}

void Network::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufMIST.Network)
  // repeated .ProtobufMIST.ComputerInformation computers = 1;
  for (unsigned int i = 0, n = this->computers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->computers(i), output);
  }

  // @@protoc_insertion_point(serialize_end:ProtobufMIST.Network)
}

::google::protobuf::uint8* Network::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufMIST.Network)
  // repeated .ProtobufMIST.ComputerInformation computers = 1;
  for (unsigned int i = 0, n = this->computers_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->computers(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ProtobufMIST.Network)
  return target;
}

size_t Network::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufMIST.Network)
  size_t total_size = 0;

  // repeated .ProtobufMIST.ComputerInformation computers = 1;
  {
    unsigned int count = this->computers_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->computers(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Network::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufMIST.Network)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Network* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Network>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufMIST.Network)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufMIST.Network)
    UnsafeMergeFrom(*source);
  }
}

void Network::MergeFrom(const Network& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufMIST.Network)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Network::UnsafeMergeFrom(const Network& from) {
  GOOGLE_DCHECK(&from != this);
  computers_.MergeFrom(from.computers_);
}

void Network::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufMIST.Network)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Network::CopyFrom(const Network& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufMIST.Network)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Network::IsInitialized() const {

  return true;
}

void Network::Swap(Network* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Network::InternalSwap(Network* other) {
  computers_.UnsafeArenaSwap(&other->computers_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Network::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Network_descriptor_;
  metadata.reflection = Network_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Network

// repeated .ProtobufMIST.ComputerInformation computers = 1;
int Network::computers_size() const {
  return computers_.size();
}
void Network::clear_computers() {
  computers_.Clear();
}
const ::ProtobufMIST::ComputerInformation& Network::computers(int index) const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Network.computers)
  return computers_.Get(index);
}
::ProtobufMIST::ComputerInformation* Network::mutable_computers(int index) {
  // @@protoc_insertion_point(field_mutable:ProtobufMIST.Network.computers)
  return computers_.Mutable(index);
}
::ProtobufMIST::ComputerInformation* Network::add_computers() {
  // @@protoc_insertion_point(field_add:ProtobufMIST.Network.computers)
  return computers_.Add();
}
::google::protobuf::RepeatedPtrField< ::ProtobufMIST::ComputerInformation >*
Network::mutable_computers() {
  // @@protoc_insertion_point(field_mutable_list:ProtobufMIST.Network.computers)
  return &computers_;
}
const ::google::protobuf::RepeatedPtrField< ::ProtobufMIST::ComputerInformation >&
Network::computers() const {
  // @@protoc_insertion_point(field_list:ProtobufMIST.Network.computers)
  return computers_;
}

inline const Network* Network::internal_default_instance() {
  return &Network_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Task::kTaskNameFieldNumber;
const int Task::kTaskIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Task::Task()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_MIST_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufMIST.Task)
}

void Task::InitAsDefaultInstance() {
}

Task::Task(const Task& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtobufMIST.Task)
}

void Task::SharedCtor() {
  task_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  task_id_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

Task::~Task() {
  // @@protoc_insertion_point(destructor:ProtobufMIST.Task)
  SharedDtor();
}

void Task::SharedDtor() {
  task_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Task::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Task::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Task_descriptor_;
}

const Task& Task::default_instance() {
  protobuf_InitDefaults_MIST_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Task> Task_default_instance_;

Task* Task::New(::google::protobuf::Arena* arena) const {
  Task* n = new Task;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Task::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufMIST.Task)
  task_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  task_id_ = GOOGLE_LONGLONG(0);
}

bool Task::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufMIST.Task)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string task_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_task_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->task_name().data(), this->task_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtobufMIST.Task.task_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_task_id;
        break;
      }

      // optional int64 task_id = 2;
      case 2: {
        if (tag == 16) {
         parse_task_id:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &task_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufMIST.Task)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufMIST.Task)
  return false;
#undef DO_
}

void Task::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufMIST.Task)
  // optional string task_name = 1;
  if (this->task_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->task_name().data(), this->task_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufMIST.Task.task_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->task_name(), output);
  }

  // optional int64 task_id = 2;
  if (this->task_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->task_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:ProtobufMIST.Task)
}

::google::protobuf::uint8* Task::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufMIST.Task)
  // optional string task_name = 1;
  if (this->task_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->task_name().data(), this->task_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufMIST.Task.task_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->task_name(), target);
  }

  // optional int64 task_id = 2;
  if (this->task_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->task_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ProtobufMIST.Task)
  return target;
}

size_t Task::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufMIST.Task)
  size_t total_size = 0;

  // optional string task_name = 1;
  if (this->task_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->task_name());
  }

  // optional int64 task_id = 2;
  if (this->task_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->task_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Task::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufMIST.Task)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Task* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Task>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufMIST.Task)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufMIST.Task)
    UnsafeMergeFrom(*source);
  }
}

void Task::MergeFrom(const Task& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufMIST.Task)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Task::UnsafeMergeFrom(const Task& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.task_name().size() > 0) {

    task_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.task_name_);
  }
  if (from.task_id() != 0) {
    set_task_id(from.task_id());
  }
}

void Task::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufMIST.Task)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Task::CopyFrom(const Task& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufMIST.Task)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Task::IsInitialized() const {

  return true;
}

void Task::Swap(Task* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Task::InternalSwap(Task* other) {
  task_name_.Swap(&other->task_name_);
  std::swap(task_id_, other->task_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Task::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Task_descriptor_;
  metadata.reflection = Task_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Task

// optional string task_name = 1;
void Task::clear_task_name() {
  task_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Task::task_name() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Task.task_name)
  return task_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Task::set_task_name(const ::std::string& value) {
  
  task_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtobufMIST.Task.task_name)
}
void Task::set_task_name(const char* value) {
  
  task_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtobufMIST.Task.task_name)
}
void Task::set_task_name(const char* value, size_t size) {
  
  task_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtobufMIST.Task.task_name)
}
::std::string* Task::mutable_task_name() {
  
  // @@protoc_insertion_point(field_mutable:ProtobufMIST.Task.task_name)
  return task_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Task::release_task_name() {
  // @@protoc_insertion_point(field_release:ProtobufMIST.Task.task_name)
  
  return task_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Task::set_allocated_task_name(::std::string* task_name) {
  if (task_name != NULL) {
    
  } else {
    
  }
  task_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), task_name);
  // @@protoc_insertion_point(field_set_allocated:ProtobufMIST.Task.task_name)
}

// optional int64 task_id = 2;
void Task::clear_task_id() {
  task_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Task::task_id() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Task.task_id)
  return task_id_;
}
void Task::set_task_id(::google::protobuf::int64 value) {
  
  task_id_ = value;
  // @@protoc_insertion_point(field_set:ProtobufMIST.Task.task_id)
}

inline const Task* Task::internal_default_instance() {
  return &Task_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtobufMIST

// @@protoc_insertion_point(global_scope)
