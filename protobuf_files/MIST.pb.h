// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MIST.proto

#ifndef PROTOBUF_MIST_2eproto__INCLUDED
#define PROTOBUF_MIST_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace ProtobufMIST {
class ComputerInformation;
class ComputerInformationDefaultTypeInternal;
extern ComputerInformationDefaultTypeInternal _ComputerInformation_default_instance_;
class Network;
class NetworkDefaultTypeInternal;
extern NetworkDefaultTypeInternal _Network_default_instance_;
class Shared_bool;
class Shared_boolDefaultTypeInternal;
extern Shared_boolDefaultTypeInternal _Shared_bool_default_instance_;
class Shared_bytes;
class Shared_bytesDefaultTypeInternal;
extern Shared_bytesDefaultTypeInternal _Shared_bytes_default_instance_;
class Shared_double;
class Shared_doubleDefaultTypeInternal;
extern Shared_doubleDefaultTypeInternal _Shared_double_default_instance_;
class Shared_float;
class Shared_floatDefaultTypeInternal;
extern Shared_floatDefaultTypeInternal _Shared_float_default_instance_;
class Shared_int32;
class Shared_int32DefaultTypeInternal;
extern Shared_int32DefaultTypeInternal _Shared_int32_default_instance_;
class Shared_int64;
class Shared_int64DefaultTypeInternal;
extern Shared_int64DefaultTypeInternal _Shared_int64_default_instance_;
class Shared_string;
class Shared_stringDefaultTypeInternal;
extern Shared_stringDefaultTypeInternal _Shared_string_default_instance_;
class Shared_uint32;
class Shared_uint32DefaultTypeInternal;
extern Shared_uint32DefaultTypeInternal _Shared_uint32_default_instance_;
class Shared_uint64;
class Shared_uint64DefaultTypeInternal;
extern Shared_uint64DefaultTypeInternal _Shared_uint64_default_instance_;
class Task;
class TaskDefaultTypeInternal;
extern TaskDefaultTypeInternal _Task_default_instance_;
class Variable_name;
class Variable_nameDefaultTypeInternal;
extern Variable_nameDefaultTypeInternal _Variable_name_default_instance_;
}  // namespace ProtobufMIST

namespace ProtobufMIST {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_MIST_2eproto();
void protobuf_InitDefaults_MIST_2eproto();

// ===================================================================

class ComputerInformation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtobufMIST.ComputerInformation) */ {
 public:
  ComputerInformation();
  virtual ~ComputerInformation();

  ComputerInformation(const ComputerInformation& from);

  inline ComputerInformation& operator=(const ComputerInformation& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ComputerInformation& default_instance();

  static inline const ComputerInformation* internal_default_instance() {
    return reinterpret_cast<const ComputerInformation*>(
               &_ComputerInformation_default_instance_);
  }

  void Swap(ComputerInformation* other);

  // implements Message ----------------------------------------------

  inline ComputerInformation* New() const PROTOBUF_FINAL { return New(NULL); }

  ComputerInformation* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ComputerInformation& from);
  void MergeFrom(const ComputerInformation& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ComputerInformation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 allowedThreads = 1;
  void clear_allowedthreads();
  static const int kAllowedThreadsFieldNumber = 1;
  ::google::protobuf::uint32 allowedthreads() const;
  void set_allowedthreads(::google::protobuf::uint32 value);

  // uint64 allowedMemory = 2;
  void clear_allowedmemory();
  static const int kAllowedMemoryFieldNumber = 2;
  ::google::protobuf::uint64 allowedmemory() const;
  void set_allowedmemory(::google::protobuf::uint64 value);

  // bool enableHT = 3;
  void clear_enableht();
  static const int kEnableHTFieldNumber = 3;
  bool enableht() const;
  void set_enableht(bool value);

  // string name = 4;
  void clear_name();
  static const int kNameFieldNumber = 4;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string address = 5;
  void clear_address();
  static const int kAddressFieldNumber = 5;
  const ::std::string& address() const;
  void set_address(const ::std::string& value);
  void set_address(const char* value);
  void set_address(const char* value, size_t size);
  ::std::string* mutable_address();
  ::std::string* release_address();
  void set_allocated_address(::std::string* address);

  // @@protoc_insertion_point(class_scope:ProtobufMIST.ComputerInformation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr address_;
  ::google::protobuf::uint64 allowedmemory_;
  ::google::protobuf::uint32 allowedthreads_;
  bool enableht_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_MIST_2eproto_impl();
  friend void  protobuf_AddDesc_MIST_2eproto_impl();
  friend const ::google::protobuf::uint32* protobuf_Offsets_MIST_2eproto();
  friend void protobuf_ShutdownFile_MIST_2eproto();

};
// -------------------------------------------------------------------

class Variable_name : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtobufMIST.Variable_name) */ {
 public:
  Variable_name();
  virtual ~Variable_name();

  Variable_name(const Variable_name& from);

  inline Variable_name& operator=(const Variable_name& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Variable_name& default_instance();

  static inline const Variable_name* internal_default_instance() {
    return reinterpret_cast<const Variable_name*>(
               &_Variable_name_default_instance_);
  }

  void Swap(Variable_name* other);

  // implements Message ----------------------------------------------

  inline Variable_name* New() const PROTOBUF_FINAL { return New(NULL); }

  Variable_name* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Variable_name& from);
  void MergeFrom(const Variable_name& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Variable_name* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:ProtobufMIST.Variable_name)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_MIST_2eproto_impl();
  friend void  protobuf_AddDesc_MIST_2eproto_impl();
  friend const ::google::protobuf::uint32* protobuf_Offsets_MIST_2eproto();
  friend void protobuf_ShutdownFile_MIST_2eproto();

};
// -------------------------------------------------------------------

class Shared_int64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtobufMIST.Shared_int64) */ {
 public:
  Shared_int64();
  virtual ~Shared_int64();

  Shared_int64(const Shared_int64& from);

  inline Shared_int64& operator=(const Shared_int64& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Shared_int64& default_instance();

  static inline const Shared_int64* internal_default_instance() {
    return reinterpret_cast<const Shared_int64*>(
               &_Shared_int64_default_instance_);
  }

  void Swap(Shared_int64* other);

  // implements Message ----------------------------------------------

  inline Shared_int64* New() const PROTOBUF_FINAL { return New(NULL); }

  Shared_int64* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Shared_int64& from);
  void MergeFrom(const Shared_int64& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Shared_int64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ProtobufMIST.Variable_name name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::ProtobufMIST::Variable_name& name() const;
  ::ProtobufMIST::Variable_name* mutable_name();
  ::ProtobufMIST::Variable_name* release_name();
  void set_allocated_name(::ProtobufMIST::Variable_name* name);

  // int64 value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  ::google::protobuf::int64 value() const;
  void set_value(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:ProtobufMIST.Shared_int64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ProtobufMIST::Variable_name* name_;
  ::google::protobuf::int64 value_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_MIST_2eproto_impl();
  friend void  protobuf_AddDesc_MIST_2eproto_impl();
  friend const ::google::protobuf::uint32* protobuf_Offsets_MIST_2eproto();
  friend void protobuf_ShutdownFile_MIST_2eproto();

};
// -------------------------------------------------------------------

class Shared_uint64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtobufMIST.Shared_uint64) */ {
 public:
  Shared_uint64();
  virtual ~Shared_uint64();

  Shared_uint64(const Shared_uint64& from);

  inline Shared_uint64& operator=(const Shared_uint64& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Shared_uint64& default_instance();

  static inline const Shared_uint64* internal_default_instance() {
    return reinterpret_cast<const Shared_uint64*>(
               &_Shared_uint64_default_instance_);
  }

  void Swap(Shared_uint64* other);

  // implements Message ----------------------------------------------

  inline Shared_uint64* New() const PROTOBUF_FINAL { return New(NULL); }

  Shared_uint64* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Shared_uint64& from);
  void MergeFrom(const Shared_uint64& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Shared_uint64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ProtobufMIST.Variable_name name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::ProtobufMIST::Variable_name& name() const;
  ::ProtobufMIST::Variable_name* mutable_name();
  ::ProtobufMIST::Variable_name* release_name();
  void set_allocated_name(::ProtobufMIST::Variable_name* name);

  // uint64 value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  ::google::protobuf::uint64 value() const;
  void set_value(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:ProtobufMIST.Shared_uint64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ProtobufMIST::Variable_name* name_;
  ::google::protobuf::uint64 value_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_MIST_2eproto_impl();
  friend void  protobuf_AddDesc_MIST_2eproto_impl();
  friend const ::google::protobuf::uint32* protobuf_Offsets_MIST_2eproto();
  friend void protobuf_ShutdownFile_MIST_2eproto();

};
// -------------------------------------------------------------------

class Shared_int32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtobufMIST.Shared_int32) */ {
 public:
  Shared_int32();
  virtual ~Shared_int32();

  Shared_int32(const Shared_int32& from);

  inline Shared_int32& operator=(const Shared_int32& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Shared_int32& default_instance();

  static inline const Shared_int32* internal_default_instance() {
    return reinterpret_cast<const Shared_int32*>(
               &_Shared_int32_default_instance_);
  }

  void Swap(Shared_int32* other);

  // implements Message ----------------------------------------------

  inline Shared_int32* New() const PROTOBUF_FINAL { return New(NULL); }

  Shared_int32* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Shared_int32& from);
  void MergeFrom(const Shared_int32& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Shared_int32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ProtobufMIST.Variable_name name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::ProtobufMIST::Variable_name& name() const;
  ::ProtobufMIST::Variable_name* mutable_name();
  ::ProtobufMIST::Variable_name* release_name();
  void set_allocated_name(::ProtobufMIST::Variable_name* name);

  // int64 value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  ::google::protobuf::int64 value() const;
  void set_value(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:ProtobufMIST.Shared_int32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ProtobufMIST::Variable_name* name_;
  ::google::protobuf::int64 value_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_MIST_2eproto_impl();
  friend void  protobuf_AddDesc_MIST_2eproto_impl();
  friend const ::google::protobuf::uint32* protobuf_Offsets_MIST_2eproto();
  friend void protobuf_ShutdownFile_MIST_2eproto();

};
// -------------------------------------------------------------------

class Shared_uint32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtobufMIST.Shared_uint32) */ {
 public:
  Shared_uint32();
  virtual ~Shared_uint32();

  Shared_uint32(const Shared_uint32& from);

  inline Shared_uint32& operator=(const Shared_uint32& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Shared_uint32& default_instance();

  static inline const Shared_uint32* internal_default_instance() {
    return reinterpret_cast<const Shared_uint32*>(
               &_Shared_uint32_default_instance_);
  }

  void Swap(Shared_uint32* other);

  // implements Message ----------------------------------------------

  inline Shared_uint32* New() const PROTOBUF_FINAL { return New(NULL); }

  Shared_uint32* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Shared_uint32& from);
  void MergeFrom(const Shared_uint32& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Shared_uint32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ProtobufMIST.Variable_name name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::ProtobufMIST::Variable_name& name() const;
  ::ProtobufMIST::Variable_name* mutable_name();
  ::ProtobufMIST::Variable_name* release_name();
  void set_allocated_name(::ProtobufMIST::Variable_name* name);

  // uint64 value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  ::google::protobuf::uint64 value() const;
  void set_value(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:ProtobufMIST.Shared_uint32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ProtobufMIST::Variable_name* name_;
  ::google::protobuf::uint64 value_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_MIST_2eproto_impl();
  friend void  protobuf_AddDesc_MIST_2eproto_impl();
  friend const ::google::protobuf::uint32* protobuf_Offsets_MIST_2eproto();
  friend void protobuf_ShutdownFile_MIST_2eproto();

};
// -------------------------------------------------------------------

class Shared_bytes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtobufMIST.Shared_bytes) */ {
 public:
  Shared_bytes();
  virtual ~Shared_bytes();

  Shared_bytes(const Shared_bytes& from);

  inline Shared_bytes& operator=(const Shared_bytes& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Shared_bytes& default_instance();

  static inline const Shared_bytes* internal_default_instance() {
    return reinterpret_cast<const Shared_bytes*>(
               &_Shared_bytes_default_instance_);
  }

  void Swap(Shared_bytes* other);

  // implements Message ----------------------------------------------

  inline Shared_bytes* New() const PROTOBUF_FINAL { return New(NULL); }

  Shared_bytes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Shared_bytes& from);
  void MergeFrom(const Shared_bytes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Shared_bytes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ProtobufMIST.Variable_name name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::ProtobufMIST::Variable_name& name() const;
  ::ProtobufMIST::Variable_name* mutable_name();
  ::ProtobufMIST::Variable_name* release_name();
  void set_allocated_name(::ProtobufMIST::Variable_name* name);

  // bytes value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:ProtobufMIST.Shared_bytes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::ProtobufMIST::Variable_name* name_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_MIST_2eproto_impl();
  friend void  protobuf_AddDesc_MIST_2eproto_impl();
  friend const ::google::protobuf::uint32* protobuf_Offsets_MIST_2eproto();
  friend void protobuf_ShutdownFile_MIST_2eproto();

};
// -------------------------------------------------------------------

class Shared_bool : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtobufMIST.Shared_bool) */ {
 public:
  Shared_bool();
  virtual ~Shared_bool();

  Shared_bool(const Shared_bool& from);

  inline Shared_bool& operator=(const Shared_bool& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Shared_bool& default_instance();

  static inline const Shared_bool* internal_default_instance() {
    return reinterpret_cast<const Shared_bool*>(
               &_Shared_bool_default_instance_);
  }

  void Swap(Shared_bool* other);

  // implements Message ----------------------------------------------

  inline Shared_bool* New() const PROTOBUF_FINAL { return New(NULL); }

  Shared_bool* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Shared_bool& from);
  void MergeFrom(const Shared_bool& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Shared_bool* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ProtobufMIST.Variable_name name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::ProtobufMIST::Variable_name& name() const;
  ::ProtobufMIST::Variable_name* mutable_name();
  ::ProtobufMIST::Variable_name* release_name();
  void set_allocated_name(::ProtobufMIST::Variable_name* name);

  // bool value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  bool value() const;
  void set_value(bool value);

  // @@protoc_insertion_point(class_scope:ProtobufMIST.Shared_bool)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ProtobufMIST::Variable_name* name_;
  bool value_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_MIST_2eproto_impl();
  friend void  protobuf_AddDesc_MIST_2eproto_impl();
  friend const ::google::protobuf::uint32* protobuf_Offsets_MIST_2eproto();
  friend void protobuf_ShutdownFile_MIST_2eproto();

};
// -------------------------------------------------------------------

class Shared_float : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtobufMIST.Shared_float) */ {
 public:
  Shared_float();
  virtual ~Shared_float();

  Shared_float(const Shared_float& from);

  inline Shared_float& operator=(const Shared_float& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Shared_float& default_instance();

  static inline const Shared_float* internal_default_instance() {
    return reinterpret_cast<const Shared_float*>(
               &_Shared_float_default_instance_);
  }

  void Swap(Shared_float* other);

  // implements Message ----------------------------------------------

  inline Shared_float* New() const PROTOBUF_FINAL { return New(NULL); }

  Shared_float* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Shared_float& from);
  void MergeFrom(const Shared_float& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Shared_float* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ProtobufMIST.Variable_name name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::ProtobufMIST::Variable_name& name() const;
  ::ProtobufMIST::Variable_name* mutable_name();
  ::ProtobufMIST::Variable_name* release_name();
  void set_allocated_name(::ProtobufMIST::Variable_name* name);

  // float value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  float value() const;
  void set_value(float value);

  // @@protoc_insertion_point(class_scope:ProtobufMIST.Shared_float)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ProtobufMIST::Variable_name* name_;
  float value_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_MIST_2eproto_impl();
  friend void  protobuf_AddDesc_MIST_2eproto_impl();
  friend const ::google::protobuf::uint32* protobuf_Offsets_MIST_2eproto();
  friend void protobuf_ShutdownFile_MIST_2eproto();

};
// -------------------------------------------------------------------

class Shared_double : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtobufMIST.Shared_double) */ {
 public:
  Shared_double();
  virtual ~Shared_double();

  Shared_double(const Shared_double& from);

  inline Shared_double& operator=(const Shared_double& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Shared_double& default_instance();

  static inline const Shared_double* internal_default_instance() {
    return reinterpret_cast<const Shared_double*>(
               &_Shared_double_default_instance_);
  }

  void Swap(Shared_double* other);

  // implements Message ----------------------------------------------

  inline Shared_double* New() const PROTOBUF_FINAL { return New(NULL); }

  Shared_double* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Shared_double& from);
  void MergeFrom(const Shared_double& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Shared_double* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ProtobufMIST.Variable_name name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::ProtobufMIST::Variable_name& name() const;
  ::ProtobufMIST::Variable_name* mutable_name();
  ::ProtobufMIST::Variable_name* release_name();
  void set_allocated_name(::ProtobufMIST::Variable_name* name);

  // double value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  double value() const;
  void set_value(double value);

  // @@protoc_insertion_point(class_scope:ProtobufMIST.Shared_double)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ProtobufMIST::Variable_name* name_;
  double value_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_MIST_2eproto_impl();
  friend void  protobuf_AddDesc_MIST_2eproto_impl();
  friend const ::google::protobuf::uint32* protobuf_Offsets_MIST_2eproto();
  friend void protobuf_ShutdownFile_MIST_2eproto();

};
// -------------------------------------------------------------------

class Shared_string : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtobufMIST.Shared_string) */ {
 public:
  Shared_string();
  virtual ~Shared_string();

  Shared_string(const Shared_string& from);

  inline Shared_string& operator=(const Shared_string& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Shared_string& default_instance();

  static inline const Shared_string* internal_default_instance() {
    return reinterpret_cast<const Shared_string*>(
               &_Shared_string_default_instance_);
  }

  void Swap(Shared_string* other);

  // implements Message ----------------------------------------------

  inline Shared_string* New() const PROTOBUF_FINAL { return New(NULL); }

  Shared_string* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Shared_string& from);
  void MergeFrom(const Shared_string& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Shared_string* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ProtobufMIST.Variable_name name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::ProtobufMIST::Variable_name& name() const;
  ::ProtobufMIST::Variable_name* mutable_name();
  ::ProtobufMIST::Variable_name* release_name();
  void set_allocated_name(::ProtobufMIST::Variable_name* name);

  // string value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:ProtobufMIST.Shared_string)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::ProtobufMIST::Variable_name* name_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_MIST_2eproto_impl();
  friend void  protobuf_AddDesc_MIST_2eproto_impl();
  friend const ::google::protobuf::uint32* protobuf_Offsets_MIST_2eproto();
  friend void protobuf_ShutdownFile_MIST_2eproto();

};
// -------------------------------------------------------------------

class Network : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtobufMIST.Network) */ {
 public:
  Network();
  virtual ~Network();

  Network(const Network& from);

  inline Network& operator=(const Network& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Network& default_instance();

  static inline const Network* internal_default_instance() {
    return reinterpret_cast<const Network*>(
               &_Network_default_instance_);
  }

  void Swap(Network* other);

  // implements Message ----------------------------------------------

  inline Network* New() const PROTOBUF_FINAL { return New(NULL); }

  Network* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Network& from);
  void MergeFrom(const Network& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Network* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ProtobufMIST.ComputerInformation computers = 1;
  int computers_size() const;
  void clear_computers();
  static const int kComputersFieldNumber = 1;
  const ::ProtobufMIST::ComputerInformation& computers(int index) const;
  ::ProtobufMIST::ComputerInformation* mutable_computers(int index);
  ::ProtobufMIST::ComputerInformation* add_computers();
  ::google::protobuf::RepeatedPtrField< ::ProtobufMIST::ComputerInformation >*
      mutable_computers();
  const ::google::protobuf::RepeatedPtrField< ::ProtobufMIST::ComputerInformation >&
      computers() const;

  // @@protoc_insertion_point(class_scope:ProtobufMIST.Network)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ProtobufMIST::ComputerInformation > computers_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_MIST_2eproto_impl();
  friend void  protobuf_AddDesc_MIST_2eproto_impl();
  friend const ::google::protobuf::uint32* protobuf_Offsets_MIST_2eproto();
  friend void protobuf_ShutdownFile_MIST_2eproto();

};
// -------------------------------------------------------------------

class Task : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtobufMIST.Task) */ {
 public:
  Task();
  virtual ~Task();

  Task(const Task& from);

  inline Task& operator=(const Task& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Task& default_instance();

  static inline const Task* internal_default_instance() {
    return reinterpret_cast<const Task*>(
               &_Task_default_instance_);
  }

  void Swap(Task* other);

  // implements Message ----------------------------------------------

  inline Task* New() const PROTOBUF_FINAL { return New(NULL); }

  Task* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Task& from);
  void MergeFrom(const Task& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Task* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string task_name = 1;
  void clear_task_name();
  static const int kTaskNameFieldNumber = 1;
  const ::std::string& task_name() const;
  void set_task_name(const ::std::string& value);
  void set_task_name(const char* value);
  void set_task_name(const char* value, size_t size);
  ::std::string* mutable_task_name();
  ::std::string* release_task_name();
  void set_allocated_task_name(::std::string* task_name);

  // string task_id = 2;
  void clear_task_id();
  static const int kTaskIdFieldNumber = 2;
  const ::std::string& task_id() const;
  void set_task_id(const ::std::string& value);
  void set_task_id(const char* value);
  void set_task_id(const char* value, size_t size);
  ::std::string* mutable_task_id();
  ::std::string* release_task_id();
  void set_allocated_task_id(::std::string* task_id);

  // @@protoc_insertion_point(class_scope:ProtobufMIST.Task)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr task_name_;
  ::google::protobuf::internal::ArenaStringPtr task_id_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_MIST_2eproto_impl();
  friend void  protobuf_AddDesc_MIST_2eproto_impl();
  friend const ::google::protobuf::uint32* protobuf_Offsets_MIST_2eproto();
  friend void protobuf_ShutdownFile_MIST_2eproto();

};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ComputerInformation

// uint32 allowedThreads = 1;
inline void ComputerInformation::clear_allowedthreads() {
  allowedthreads_ = 0u;
}
inline ::google::protobuf::uint32 ComputerInformation::allowedthreads() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.ComputerInformation.allowedThreads)
  return allowedthreads_;
}
inline void ComputerInformation::set_allowedthreads(::google::protobuf::uint32 value) {
  
  allowedthreads_ = value;
  // @@protoc_insertion_point(field_set:ProtobufMIST.ComputerInformation.allowedThreads)
}

// uint64 allowedMemory = 2;
inline void ComputerInformation::clear_allowedmemory() {
  allowedmemory_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ComputerInformation::allowedmemory() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.ComputerInformation.allowedMemory)
  return allowedmemory_;
}
inline void ComputerInformation::set_allowedmemory(::google::protobuf::uint64 value) {
  
  allowedmemory_ = value;
  // @@protoc_insertion_point(field_set:ProtobufMIST.ComputerInformation.allowedMemory)
}

// bool enableHT = 3;
inline void ComputerInformation::clear_enableht() {
  enableht_ = false;
}
inline bool ComputerInformation::enableht() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.ComputerInformation.enableHT)
  return enableht_;
}
inline void ComputerInformation::set_enableht(bool value) {
  
  enableht_ = value;
  // @@protoc_insertion_point(field_set:ProtobufMIST.ComputerInformation.enableHT)
}

// string name = 4;
inline void ComputerInformation::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ComputerInformation::name() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.ComputerInformation.name)
  return name_.GetNoArena();
}
inline void ComputerInformation::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtobufMIST.ComputerInformation.name)
}
inline void ComputerInformation::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtobufMIST.ComputerInformation.name)
}
inline void ComputerInformation::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtobufMIST.ComputerInformation.name)
}
inline ::std::string* ComputerInformation::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ProtobufMIST.ComputerInformation.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ComputerInformation::release_name() {
  // @@protoc_insertion_point(field_release:ProtobufMIST.ComputerInformation.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ComputerInformation::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ProtobufMIST.ComputerInformation.name)
}

// string address = 5;
inline void ComputerInformation::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ComputerInformation::address() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.ComputerInformation.address)
  return address_.GetNoArena();
}
inline void ComputerInformation::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtobufMIST.ComputerInformation.address)
}
inline void ComputerInformation::set_address(const char* value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtobufMIST.ComputerInformation.address)
}
inline void ComputerInformation::set_address(const char* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtobufMIST.ComputerInformation.address)
}
inline ::std::string* ComputerInformation::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:ProtobufMIST.ComputerInformation.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ComputerInformation::release_address() {
  // @@protoc_insertion_point(field_release:ProtobufMIST.ComputerInformation.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ComputerInformation::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:ProtobufMIST.ComputerInformation.address)
}

// -------------------------------------------------------------------

// Variable_name

// string name = 1;
inline void Variable_name::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Variable_name::name() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Variable_name.name)
  return name_.GetNoArena();
}
inline void Variable_name::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtobufMIST.Variable_name.name)
}
inline void Variable_name::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtobufMIST.Variable_name.name)
}
inline void Variable_name::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtobufMIST.Variable_name.name)
}
inline ::std::string* Variable_name::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ProtobufMIST.Variable_name.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Variable_name::release_name() {
  // @@protoc_insertion_point(field_release:ProtobufMIST.Variable_name.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Variable_name::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ProtobufMIST.Variable_name.name)
}

// -------------------------------------------------------------------

// Shared_int64

// .ProtobufMIST.Variable_name name = 1;
inline bool Shared_int64::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
inline void Shared_int64::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) delete name_;
  name_ = NULL;
}
inline const ::ProtobufMIST::Variable_name& Shared_int64::name() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Shared_int64.name)
  return name_ != NULL ? *name_
                         : *::ProtobufMIST::Variable_name::internal_default_instance();
}
inline ::ProtobufMIST::Variable_name* Shared_int64::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ProtobufMIST::Variable_name;
  }
  // @@protoc_insertion_point(field_mutable:ProtobufMIST.Shared_int64.name)
  return name_;
}
inline ::ProtobufMIST::Variable_name* Shared_int64::release_name() {
  // @@protoc_insertion_point(field_release:ProtobufMIST.Shared_int64.name)
  
  ::ProtobufMIST::Variable_name* temp = name_;
  name_ = NULL;
  return temp;
}
inline void Shared_int64::set_allocated_name(::ProtobufMIST::Variable_name* name) {
  delete name_;
  name_ = name;
  if (name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ProtobufMIST.Shared_int64.name)
}

// int64 value = 2;
inline void Shared_int64::clear_value() {
  value_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Shared_int64::value() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Shared_int64.value)
  return value_;
}
inline void Shared_int64::set_value(::google::protobuf::int64 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:ProtobufMIST.Shared_int64.value)
}

// -------------------------------------------------------------------

// Shared_uint64

// .ProtobufMIST.Variable_name name = 1;
inline bool Shared_uint64::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
inline void Shared_uint64::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) delete name_;
  name_ = NULL;
}
inline const ::ProtobufMIST::Variable_name& Shared_uint64::name() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Shared_uint64.name)
  return name_ != NULL ? *name_
                         : *::ProtobufMIST::Variable_name::internal_default_instance();
}
inline ::ProtobufMIST::Variable_name* Shared_uint64::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ProtobufMIST::Variable_name;
  }
  // @@protoc_insertion_point(field_mutable:ProtobufMIST.Shared_uint64.name)
  return name_;
}
inline ::ProtobufMIST::Variable_name* Shared_uint64::release_name() {
  // @@protoc_insertion_point(field_release:ProtobufMIST.Shared_uint64.name)
  
  ::ProtobufMIST::Variable_name* temp = name_;
  name_ = NULL;
  return temp;
}
inline void Shared_uint64::set_allocated_name(::ProtobufMIST::Variable_name* name) {
  delete name_;
  name_ = name;
  if (name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ProtobufMIST.Shared_uint64.name)
}

// uint64 value = 2;
inline void Shared_uint64::clear_value() {
  value_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Shared_uint64::value() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Shared_uint64.value)
  return value_;
}
inline void Shared_uint64::set_value(::google::protobuf::uint64 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:ProtobufMIST.Shared_uint64.value)
}

// -------------------------------------------------------------------

// Shared_int32

// .ProtobufMIST.Variable_name name = 1;
inline bool Shared_int32::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
inline void Shared_int32::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) delete name_;
  name_ = NULL;
}
inline const ::ProtobufMIST::Variable_name& Shared_int32::name() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Shared_int32.name)
  return name_ != NULL ? *name_
                         : *::ProtobufMIST::Variable_name::internal_default_instance();
}
inline ::ProtobufMIST::Variable_name* Shared_int32::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ProtobufMIST::Variable_name;
  }
  // @@protoc_insertion_point(field_mutable:ProtobufMIST.Shared_int32.name)
  return name_;
}
inline ::ProtobufMIST::Variable_name* Shared_int32::release_name() {
  // @@protoc_insertion_point(field_release:ProtobufMIST.Shared_int32.name)
  
  ::ProtobufMIST::Variable_name* temp = name_;
  name_ = NULL;
  return temp;
}
inline void Shared_int32::set_allocated_name(::ProtobufMIST::Variable_name* name) {
  delete name_;
  name_ = name;
  if (name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ProtobufMIST.Shared_int32.name)
}

// int64 value = 2;
inline void Shared_int32::clear_value() {
  value_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Shared_int32::value() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Shared_int32.value)
  return value_;
}
inline void Shared_int32::set_value(::google::protobuf::int64 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:ProtobufMIST.Shared_int32.value)
}

// -------------------------------------------------------------------

// Shared_uint32

// .ProtobufMIST.Variable_name name = 1;
inline bool Shared_uint32::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
inline void Shared_uint32::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) delete name_;
  name_ = NULL;
}
inline const ::ProtobufMIST::Variable_name& Shared_uint32::name() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Shared_uint32.name)
  return name_ != NULL ? *name_
                         : *::ProtobufMIST::Variable_name::internal_default_instance();
}
inline ::ProtobufMIST::Variable_name* Shared_uint32::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ProtobufMIST::Variable_name;
  }
  // @@protoc_insertion_point(field_mutable:ProtobufMIST.Shared_uint32.name)
  return name_;
}
inline ::ProtobufMIST::Variable_name* Shared_uint32::release_name() {
  // @@protoc_insertion_point(field_release:ProtobufMIST.Shared_uint32.name)
  
  ::ProtobufMIST::Variable_name* temp = name_;
  name_ = NULL;
  return temp;
}
inline void Shared_uint32::set_allocated_name(::ProtobufMIST::Variable_name* name) {
  delete name_;
  name_ = name;
  if (name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ProtobufMIST.Shared_uint32.name)
}

// uint64 value = 2;
inline void Shared_uint32::clear_value() {
  value_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Shared_uint32::value() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Shared_uint32.value)
  return value_;
}
inline void Shared_uint32::set_value(::google::protobuf::uint64 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:ProtobufMIST.Shared_uint32.value)
}

// -------------------------------------------------------------------

// Shared_bytes

// .ProtobufMIST.Variable_name name = 1;
inline bool Shared_bytes::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
inline void Shared_bytes::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) delete name_;
  name_ = NULL;
}
inline const ::ProtobufMIST::Variable_name& Shared_bytes::name() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Shared_bytes.name)
  return name_ != NULL ? *name_
                         : *::ProtobufMIST::Variable_name::internal_default_instance();
}
inline ::ProtobufMIST::Variable_name* Shared_bytes::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ProtobufMIST::Variable_name;
  }
  // @@protoc_insertion_point(field_mutable:ProtobufMIST.Shared_bytes.name)
  return name_;
}
inline ::ProtobufMIST::Variable_name* Shared_bytes::release_name() {
  // @@protoc_insertion_point(field_release:ProtobufMIST.Shared_bytes.name)
  
  ::ProtobufMIST::Variable_name* temp = name_;
  name_ = NULL;
  return temp;
}
inline void Shared_bytes::set_allocated_name(::ProtobufMIST::Variable_name* name) {
  delete name_;
  name_ = name;
  if (name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ProtobufMIST.Shared_bytes.name)
}

// bytes value = 2;
inline void Shared_bytes::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Shared_bytes::value() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Shared_bytes.value)
  return value_.GetNoArena();
}
inline void Shared_bytes::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtobufMIST.Shared_bytes.value)
}
inline void Shared_bytes::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtobufMIST.Shared_bytes.value)
}
inline void Shared_bytes::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtobufMIST.Shared_bytes.value)
}
inline ::std::string* Shared_bytes::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:ProtobufMIST.Shared_bytes.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Shared_bytes::release_value() {
  // @@protoc_insertion_point(field_release:ProtobufMIST.Shared_bytes.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Shared_bytes::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:ProtobufMIST.Shared_bytes.value)
}

// -------------------------------------------------------------------

// Shared_bool

// .ProtobufMIST.Variable_name name = 1;
inline bool Shared_bool::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
inline void Shared_bool::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) delete name_;
  name_ = NULL;
}
inline const ::ProtobufMIST::Variable_name& Shared_bool::name() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Shared_bool.name)
  return name_ != NULL ? *name_
                         : *::ProtobufMIST::Variable_name::internal_default_instance();
}
inline ::ProtobufMIST::Variable_name* Shared_bool::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ProtobufMIST::Variable_name;
  }
  // @@protoc_insertion_point(field_mutable:ProtobufMIST.Shared_bool.name)
  return name_;
}
inline ::ProtobufMIST::Variable_name* Shared_bool::release_name() {
  // @@protoc_insertion_point(field_release:ProtobufMIST.Shared_bool.name)
  
  ::ProtobufMIST::Variable_name* temp = name_;
  name_ = NULL;
  return temp;
}
inline void Shared_bool::set_allocated_name(::ProtobufMIST::Variable_name* name) {
  delete name_;
  name_ = name;
  if (name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ProtobufMIST.Shared_bool.name)
}

// bool value = 2;
inline void Shared_bool::clear_value() {
  value_ = false;
}
inline bool Shared_bool::value() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Shared_bool.value)
  return value_;
}
inline void Shared_bool::set_value(bool value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:ProtobufMIST.Shared_bool.value)
}

// -------------------------------------------------------------------

// Shared_float

// .ProtobufMIST.Variable_name name = 1;
inline bool Shared_float::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
inline void Shared_float::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) delete name_;
  name_ = NULL;
}
inline const ::ProtobufMIST::Variable_name& Shared_float::name() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Shared_float.name)
  return name_ != NULL ? *name_
                         : *::ProtobufMIST::Variable_name::internal_default_instance();
}
inline ::ProtobufMIST::Variable_name* Shared_float::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ProtobufMIST::Variable_name;
  }
  // @@protoc_insertion_point(field_mutable:ProtobufMIST.Shared_float.name)
  return name_;
}
inline ::ProtobufMIST::Variable_name* Shared_float::release_name() {
  // @@protoc_insertion_point(field_release:ProtobufMIST.Shared_float.name)
  
  ::ProtobufMIST::Variable_name* temp = name_;
  name_ = NULL;
  return temp;
}
inline void Shared_float::set_allocated_name(::ProtobufMIST::Variable_name* name) {
  delete name_;
  name_ = name;
  if (name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ProtobufMIST.Shared_float.name)
}

// float value = 2;
inline void Shared_float::clear_value() {
  value_ = 0;
}
inline float Shared_float::value() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Shared_float.value)
  return value_;
}
inline void Shared_float::set_value(float value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:ProtobufMIST.Shared_float.value)
}

// -------------------------------------------------------------------

// Shared_double

// .ProtobufMIST.Variable_name name = 1;
inline bool Shared_double::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
inline void Shared_double::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) delete name_;
  name_ = NULL;
}
inline const ::ProtobufMIST::Variable_name& Shared_double::name() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Shared_double.name)
  return name_ != NULL ? *name_
                         : *::ProtobufMIST::Variable_name::internal_default_instance();
}
inline ::ProtobufMIST::Variable_name* Shared_double::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ProtobufMIST::Variable_name;
  }
  // @@protoc_insertion_point(field_mutable:ProtobufMIST.Shared_double.name)
  return name_;
}
inline ::ProtobufMIST::Variable_name* Shared_double::release_name() {
  // @@protoc_insertion_point(field_release:ProtobufMIST.Shared_double.name)
  
  ::ProtobufMIST::Variable_name* temp = name_;
  name_ = NULL;
  return temp;
}
inline void Shared_double::set_allocated_name(::ProtobufMIST::Variable_name* name) {
  delete name_;
  name_ = name;
  if (name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ProtobufMIST.Shared_double.name)
}

// double value = 2;
inline void Shared_double::clear_value() {
  value_ = 0;
}
inline double Shared_double::value() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Shared_double.value)
  return value_;
}
inline void Shared_double::set_value(double value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:ProtobufMIST.Shared_double.value)
}

// -------------------------------------------------------------------

// Shared_string

// .ProtobufMIST.Variable_name name = 1;
inline bool Shared_string::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
inline void Shared_string::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) delete name_;
  name_ = NULL;
}
inline const ::ProtobufMIST::Variable_name& Shared_string::name() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Shared_string.name)
  return name_ != NULL ? *name_
                         : *::ProtobufMIST::Variable_name::internal_default_instance();
}
inline ::ProtobufMIST::Variable_name* Shared_string::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ProtobufMIST::Variable_name;
  }
  // @@protoc_insertion_point(field_mutable:ProtobufMIST.Shared_string.name)
  return name_;
}
inline ::ProtobufMIST::Variable_name* Shared_string::release_name() {
  // @@protoc_insertion_point(field_release:ProtobufMIST.Shared_string.name)
  
  ::ProtobufMIST::Variable_name* temp = name_;
  name_ = NULL;
  return temp;
}
inline void Shared_string::set_allocated_name(::ProtobufMIST::Variable_name* name) {
  delete name_;
  name_ = name;
  if (name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ProtobufMIST.Shared_string.name)
}

// string value = 2;
inline void Shared_string::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Shared_string::value() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Shared_string.value)
  return value_.GetNoArena();
}
inline void Shared_string::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtobufMIST.Shared_string.value)
}
inline void Shared_string::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtobufMIST.Shared_string.value)
}
inline void Shared_string::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtobufMIST.Shared_string.value)
}
inline ::std::string* Shared_string::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:ProtobufMIST.Shared_string.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Shared_string::release_value() {
  // @@protoc_insertion_point(field_release:ProtobufMIST.Shared_string.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Shared_string::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:ProtobufMIST.Shared_string.value)
}

// -------------------------------------------------------------------

// Network

// repeated .ProtobufMIST.ComputerInformation computers = 1;
inline int Network::computers_size() const {
  return computers_.size();
}
inline void Network::clear_computers() {
  computers_.Clear();
}
inline const ::ProtobufMIST::ComputerInformation& Network::computers(int index) const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Network.computers)
  return computers_.Get(index);
}
inline ::ProtobufMIST::ComputerInformation* Network::mutable_computers(int index) {
  // @@protoc_insertion_point(field_mutable:ProtobufMIST.Network.computers)
  return computers_.Mutable(index);
}
inline ::ProtobufMIST::ComputerInformation* Network::add_computers() {
  // @@protoc_insertion_point(field_add:ProtobufMIST.Network.computers)
  return computers_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ProtobufMIST::ComputerInformation >*
Network::mutable_computers() {
  // @@protoc_insertion_point(field_mutable_list:ProtobufMIST.Network.computers)
  return &computers_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtobufMIST::ComputerInformation >&
Network::computers() const {
  // @@protoc_insertion_point(field_list:ProtobufMIST.Network.computers)
  return computers_;
}

// -------------------------------------------------------------------

// Task

// string task_name = 1;
inline void Task::clear_task_name() {
  task_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Task::task_name() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Task.task_name)
  return task_name_.GetNoArena();
}
inline void Task::set_task_name(const ::std::string& value) {
  
  task_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtobufMIST.Task.task_name)
}
inline void Task::set_task_name(const char* value) {
  
  task_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtobufMIST.Task.task_name)
}
inline void Task::set_task_name(const char* value, size_t size) {
  
  task_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtobufMIST.Task.task_name)
}
inline ::std::string* Task::mutable_task_name() {
  
  // @@protoc_insertion_point(field_mutable:ProtobufMIST.Task.task_name)
  return task_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Task::release_task_name() {
  // @@protoc_insertion_point(field_release:ProtobufMIST.Task.task_name)
  
  return task_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Task::set_allocated_task_name(::std::string* task_name) {
  if (task_name != NULL) {
    
  } else {
    
  }
  task_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), task_name);
  // @@protoc_insertion_point(field_set_allocated:ProtobufMIST.Task.task_name)
}

// string task_id = 2;
inline void Task::clear_task_id() {
  task_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Task::task_id() const {
  // @@protoc_insertion_point(field_get:ProtobufMIST.Task.task_id)
  return task_id_.GetNoArena();
}
inline void Task::set_task_id(const ::std::string& value) {
  
  task_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtobufMIST.Task.task_id)
}
inline void Task::set_task_id(const char* value) {
  
  task_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtobufMIST.Task.task_id)
}
inline void Task::set_task_id(const char* value, size_t size) {
  
  task_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtobufMIST.Task.task_id)
}
inline ::std::string* Task::mutable_task_id() {
  
  // @@protoc_insertion_point(field_mutable:ProtobufMIST.Task.task_id)
  return task_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Task::release_task_id() {
  // @@protoc_insertion_point(field_release:ProtobufMIST.Task.task_id)
  
  return task_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Task::set_allocated_task_id(::std::string* task_id) {
  if (task_id != NULL) {
    
  } else {
    
  }
  task_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), task_id);
  // @@protoc_insertion_point(field_set_allocated:ProtobufMIST.Task.task_id)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace ProtobufMIST

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MIST_2eproto__INCLUDED
